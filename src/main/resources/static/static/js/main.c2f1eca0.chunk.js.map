{"version":3,"sources":["components/movieTableComponents/AdditionalTasksHeader.js","constants/filterConstants.js","constants/pageActionsConsts.js","components/movieTableComponents/TableHeader.js","components/movieTableComponents/PageFooter.js","constants/ticketActionsConsts.js","constants/backendConstants.js","utils/xmlUtils.js","notifications/sendNotification.js","actions/ticketActions.js","components/movieTableComponents/TableRow.js","components/movieTableComponents/TicketList.js","constants/coordinatesActionsConsts.js","actions/coordinatesActions.js","components/movieTableComponents/LinksForAdding.js","components/movieTableComponents/TicketTable.js","components/movieTableComponents/TablePage.js","components/customFormComponents/rendetedInputField.js","constants/enumConstants.js","constants/personActionsConsts.js","actions/personsActions.js","components/editForms/TicketEditForm.js","components/editPages/TicketEditPage.js","components/createForms/CreateTicketForm.js","components/createPages/CreateTicketPage.js","components/filterForms/IdFilterForm.js","components/filterPages/IdFilterPage.js","components/filterForms/NameFilterForm.js","components/filterPages/NameFilterPage.js","components/filterForms/CoordinateFilterForm.js","components/filterPages/CoordinateFilterPage.js","components/filterForms/DateFilterForm.js","components/filterPages/DateFilterPage.js","components/filterForms/DiscountFilterForm.js","components/filterPages/DiscountFilterPage.js","components/filterForms/PriceFilterForm.js","components/filterPages/PriceFilterPage.js","components/filterForms/TypeFilterForm.js","components/filterPages/TypeFilterPage.js","components/filterForms/PersonFilterForm.js","components/filterPages/PersonFilterPage.js","components/modal/Modal.js","components/editForms/EditCoordinatesForm.js","components/editPages/EditCoordinatesPage.js","components/createForms/CreateCoordinatesForm.js","components/createPages/CreateCoordinatesPage.js","constants/locationActionsConsts.js","actions/locationsActions.js","components/editForms/LocationEditForm.js","components/editPages/LocationEditPage.js","components/createForms/CreateLocationForm.js","components/createPages/CreateLocationPage.js","components/editForms/EditPersonForm.js","components/editPages/EditPersonPage.js","components/createForms/CreatePersonForm.js","components/createPages/CreatePersonPage.js","constants/additionalActionsConsts.js","components/additionalTasks/TypesTaskPage.js","actions/additionalTasksActions.js","personTableComponents/PersonTableHeader.js","personTableComponents/PersonTableRow.js","personTableComponents/PersonList.js","personTableComponents/PersonTable.js","components/additionalTasks/DiscountTaskPage.js","components/additionalTasks/PersonTaskPage.js","components/App.js","reducer/ticketReducer.js","reducer/pageReducer.js","reducer/coordinatesReducer.js","reducer/locationReducer.js","reducer/personReducer.js","reducer/additionalTasksReducer.js","reducer/rootReducer.js","index.js"],"names":["AdditionalTasksHeader","history","useHistory","className","id","onClick","evt","preventDefault","push","ID","NAME","COORDINATE","DATE","DISCOUNT","PRICE","TYPE","PERSON","SET_PER_PAGE","SET_CUR_PAGE","SET_CUR_CRITERION","SET_ITEM_COUNT","DELETE_TICKET","SET_SORT","REMOVE_SORT","SHOW_MODAL","SET_FILTER","REMOVE_FILTER","TableHeader","dispatch","useDispatch","sort","useSelector","state","page","sortBy","filters","currentCriterion","curCriterion","sortHandler","criterion","element","document","getElementById","includes","type","payload","style","color","setActive","value","console","log","name","PageFooter","perPage","currentPage","itemCount","useState","localPerPage","setLocalPerPage","localCurPage","setLocalCurPage","changePage","onChange","event","input","target","onFocus","onBlur","Number","isInteger","contentEditable","SET_TICKETS","SET_EDITED_TICKET","TICKET_SERVLET","LOCATION_SERVLET","COORD_SERVLET","PERSON_SERVLET","ADDITIONAL_SERVLET","BASE","options","compact","textFn","parentElement","keyNo","Object","keys","_parent","length","keyName","nValue","isNaN","bValue","toLowerCase","nativeType","e","options1","fullTagEmptyElement","convert","require","serverException","msg","exception","message","position","autoDismiss","getTickets","curPage","criteria","result","substring","parseSortByParameter","filterBy","filter","from","to","like","xfrom","xto","yfrom","yto","parseFilters","fetch","method","headers","then","response","ok","text","xml2js","count","ticketDTOList","tickets","ticketList","catch","error","errorMessage","exceptionDTO","Notifications","transferFormDataToTicketDTO","form","creationDate","undefined","price","discount","coordinates","person","location","locations","TableRow","props","ticket","ticketId","deleteHandler","deleteTicket","x","y","TicketList","listItems","numbers","map","SET_COORDINATES","SET_EDITED_COORDINATES","getCoordinates","status","coordinatesDTOList","coordinate","LinksForAdding","TicketTable","useEffect","deleteItem","TablePage","renderedInputField","label","readonly","meta","touched","warning","placeholder","readOnly","types","colors","SET_PERSONS","SET_EDITED_PERSON","getPerson","personDTOList","personList","transferFormDataToPersonsDTO","height","eyeColor","reduxForm","keepDirtyOnReinitialize","handleSubmit","submitting","pristine","reset","editedTicket","ticketType","coordinatesList","locationsList","personsList","getSingleTicket","initialize","onSubmit","Field","component","o","selected","disabled","TicketEditPage","useParams","formData","xml","js2xml","body","window","reload","updateTicket","CreateTicketPage","createTicket","numberField","required","onSubmitSuccess","validate","IdFilterPage","textField","NameFilterPage","CoordinateFilterPage","dateField","onKeyDown","validDate","moment","isValid","ev","keycode","keyCode","which","ipLength","DateFilterPage","DateFilterForm","DiscountFilterPage","PriceFilterPage","values","errors","compare","TypeFilterPage","PersonFilterPage","Modal","active","children","stopPropagation","editedCoordinates","getSingleCoordinates","EditCoordinatesPage","coordinatesId","transferFormDataToCoordinatesDTO","updateCoordinates","CreateCoordinatesPage","createCoordinates","SET_LOCATIONS","SET_EDITED_LOCATION","getLocations","locationDTOList","editedLocation","loc","getSingleLocation","transferFormDataToLocationDTO","goBack","updateLocation","CreateLocationPage","createLocation","editedPerson","locationList","getSinglePerson","EditPersonPage","updatePerson","CreatePersonPage","createPerson","SET_TYPE_LIST","SET_TICKET_COUNT","SET_TICKET_LIST","SET_PERSON_LIST","TypeTaskPage","typeList","additional","ticketTypeDTOList","ticketTypes","t","PersonTableHeader","PersonTableRow","personId","PersonList","Array","isArray","PersonTable","DurationTaskPage","localDiscount","setLocalDiscount","listen","action","url","ScreenwriterTaskPage","ticketCount","handleOnChangePerson","countDTO","createBrowserHistory","App","notifications","modalActive","path","LocationEditPage","exact","DiscountTaskPage","PersonTaskPage","initialState","rootReducer","combineReducers","item","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render"],"mappings":"ocAuCeA,MAnCf,WACI,IAAMC,EAAUC,cAiBhB,OACI,qBAAKC,UAAU,qBAAf,SACI,sBAAKA,UAAW,YAAhB,UACI,wBAAQC,GAAG,iBAAiBC,QAbxC,SAAyBC,GACrBA,EAAIC,iBACJN,EAAQO,KAAK,qBAWL,wBAGA,wBAAQJ,GAAG,iBAAiBC,QArBxC,SAA6BC,GACzBA,EAAIC,iBACJN,EAAQO,KAAK,yBAmBL,2BAGA,wBAAQJ,GAAG,iBAAiBC,QAdxC,SAA2BC,GACvBA,EAAIC,iBACJN,EAAQO,KAAK,uBAYL,+B,gCC/BVC,EAAK,KACLC,EAAO,OACPC,EAAa,aACbC,EAAO,OACPC,EAAW,WACXC,EAAQ,QACRC,EAAO,OACPC,EAAS,SCPFC,EAAe,eACfC,EAAe,eACfC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAW,WACXC,EAAc,cACdC,EAAa,aACbC,EAAa,aACbC,EAAgB,gBCiHdC,MAlHf,WACI,IAAMC,EAAWC,wBACXC,EAAOC,uBAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,UACvCC,EAAUJ,uBAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKE,WAC1CC,EAAmBL,uBAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKI,gBAEzD,SAASC,EAAYC,GACjB,IAAIC,EAAUC,SAASC,eAAe,QAAUH,GAC3CT,EAAKa,SAASJ,IAOfX,EAAS,CACLgB,KAAMrB,EACNsB,QAASN,IAEbC,EAAQM,MAAMC,MAAQ,0BAVtBnB,EAAS,CACLgB,KAAMtB,EACNuB,QAASN,IAEbC,EAAQM,MAAMC,MAAQ,oBAU9B,SAASC,EAAUC,EAAOV,GACtBW,QAAQC,IAAI,SAAWf,GACvB,IAFiC,EAE7BI,EAAUC,SAASC,eAAe,UAAYH,GAFjB,cAGZJ,GAHY,IAGjC,2BAA8B,CAC1B,GAD0B,QACfiB,OAASb,EAMhB,OALAX,EAAS,CACLgB,KAAMlB,EACNmB,QAASN,SAEbC,EAAQM,MAAMC,MAAQ,0BATG,8BAa7BE,GACArB,EAAS,CACLgB,KAAMzB,EACN0B,QAASN,IAGjBX,EAAS,CACLgB,KAAMpB,EACNqB,QAASI,IAIjB,OACI,sBAAK9C,UAAU,oBAAoBC,GAAG,eAAtC,UAEI,sBAAKD,UAAU,SAAf,UACI,sCACA,cAAC,IAAD,CAAkB4C,MAAM,wBAAwB5C,UAAU,UAAUC,GAAG,UACrDC,QAAS,kBAAMiC,EAAY7B,MAC7C,cAAC,IAAD,CAAUsC,MAAM,wBAAwB5C,UAAU,UAAUC,GAAG,YACrDC,QAAS,kBAAM2C,GAAU,EAAMvC,SAE7C,gCACI,wCACA,cAAC,IAAD,CAAkBN,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,YACrDC,QAAS,kBAAMiC,EAAY5B,MAC7C,cAAC,IAAD,CAAUP,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,cACrDC,QAAS,kBAAM2C,GAAU,EAAMtC,SAE7C,gCACI,+CACA,cAAC,IAAD,CAAkBP,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,kBACrDC,QAAS,kBAAMiC,EAAY3B,MAC7C,cAAC,IAAD,CAAUR,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,oBACrDC,QAAS,kBAAM2C,GAAU,EAAMrC,SAE7C,gCACI,iDACA,cAAC,IAAD,CAAkBR,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,YACrDC,QAAS,kBAAMiC,EAAY1B,MAC7C,cAAC,IAAD,CAAUT,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,cACrDC,QAAS,kBAAM2C,GAAU,EAAMpC,SAE7C,gCACI,4CACA,cAAC,IAAD,CAAkBT,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,gBACrDC,QAAS,kBAAMiC,EAAYzB,MAC7C,cAAC,IAAD,CAAUV,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,kBACrDC,QAAS,kBAAM2C,GAAU,EAAMnC,SAE7C,gCACI,yCACA,cAAC,IAAD,CAAkBV,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,aACrDC,QAAS,kBAAMiC,EAAYxB,MAC7C,cAAC,IAAD,CAAUX,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,eACrDC,QAAS,kBAAM2C,GAAU,EAAMlC,SAE7C,gCACI,wCACA,cAAC,IAAD,CAAkBX,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,YACrDC,QAAS,kBAAMiC,EAAYvB,MAC7C,cAAC,IAAD,CAAUZ,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,cACrDC,QAAS,kBAAM2C,GAAU,EAAMjC,SAE7C,gCACI,6CACA,cAAC,IAAD,CAAkBZ,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,cACrDC,QAAS,kBAAMiC,EAAYtB,MAC7C,cAAC,IAAD,CAAUb,UAAU,UAAU4C,MAAM,wBAAwB3C,GAAG,gBACrDC,QAAS,kBAAM2C,GAAU,EAAMhC,SAE7C,8BACI,gD,0CCKDqC,MAjHf,WACI,IAAMC,EAAUvB,uBAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKqB,WAC1CC,EAAcxB,uBAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKsB,eAC9CC,EAAYzB,uBAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKuB,aAC5C5B,EAAWC,wBACX5B,EAAUC,cAEhB,EAAwCuD,mBAAS,MAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,KAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KA4DA,SAASC,EAAWb,GACZA,EAAQ,IAAOA,EAAQ,GAAKK,EAAUE,EAAa,IACnDK,EAAgBZ,GAChBrB,EAAS,CACLgB,KAAM1B,EACN2B,QAASI,KAOrB,OACI,sBAAK9C,UAAU,cAAf,UACI,wBAAQC,GAAG,iBAAiBC,QAAS,WAjBzCJ,EAAQO,KAAK,SAiBT,SACI,sBAAKL,UAAW,WAAhB,UACI,qBAAKA,UAAW,OAAhB,SACI,cAAC,IAAD,CAAkB4C,MAAO,cAFjC,kBAOJ,sBAAK5C,UAAU,cAAf,UACI,4CACA,uBAAOC,GAAG,cAAc6C,MAAOS,EAAcK,SAlFzD,SAA+BC,GAC3B,IAAIC,EAAQD,EAAME,OAAOjB,MACzBU,EAAgBM,IAiFDE,QA9EnB,SAA8BH,GAC1BL,EAAgB,KA6E8BS,OA1ElD,SAA6BJ,GACzB,IAAIC,EAAQD,EAAME,OAAOjB,MACX,KAAVgB,GAAgBI,OAAOC,UAAUD,OAAOJ,KAAWI,OAAOJ,GAAS,EACnErC,EAAS,CACLgB,KAAM3B,EACN4B,QAASoB,KAGbN,EAAgB,MAChB/B,EAAS,CACLgB,KAAM3B,EACN4B,QAAS,SAgET,yCACA,uBAAOzC,GAAG,eAAe6C,MAAOO,EAAWe,gBAAiB,UAC5D,qBAAKnE,GAAI,aAAT,SACI,cAAC,IAAD,CAAoBD,UAAU,UAAU4C,MAAM,kBAC1B1C,QAAS,kBAAMyD,EAAWP,EAAc,QAEhE,uBAAOnD,GAAG,eAAe6C,MAAOW,EAAcG,SAjE1D,SAA+BC,GAC3B,IAAIC,EAAQD,EAAME,OAAOjB,MACzBY,EAAgBI,IAgEDE,QA7DnB,SAA8BH,GAC1BH,EAAgB,KA4D8BO,OAzDlD,SAA6BJ,GACzB,IAAIC,EAAQD,EAAME,OAAOjB,MACzBrB,EAAS,CACLgB,KAAM1B,EACN2B,QAASoB,IAEC,KAAVA,GAAgBI,OAAOC,UAAUD,OAAOJ,KAAWI,OAAOJ,GAAS,EACnErC,EAAS,CACLgB,KAAM1B,EACN2B,QAASoB,KAGbJ,EAAgB,KAChBjC,EAAS,CACLgB,KAAM1B,EACN2B,QAAS,QA2CT,qBAAKzC,GAAI,cAAT,SACI,cAAC,IAAD,CAAuBD,UAAU,UAAU4C,MAAM,kBAC1B1C,QAAS,kBAAMyD,EAAWP,EAAc,eChHtEiB,EAAc,cACdC,EAAoB,oBCDpBC,EAAiB,UACjBC,EAAmB,YACnBC,EAAgB,cAChBC,EAAiB,UACjBC,EAAqB,aACrBC,EAAO,yBCSb,IASIC,EAAU,CACjBC,SAAS,EAQTC,OAlBiC,SAAUjC,EAAOkC,GAClD,IACI,IAAIC,EAAQC,OAAOC,KAAKH,EAAcI,SAASC,OAC3CC,EAAUJ,OAAOC,KAAKH,EAAcI,SAASH,EAAQ,GACzDD,EAAcI,QAAQE,GAlBvB,SAAoBxC,GACvB,IAAIyC,EAASrB,OAAOpB,GACpB,IAAK0C,MAAMD,GACP,OAAOA,EAEX,IAAIE,EAAS3C,EAAM4C,cACnB,MAAe,SAAXD,GAEkB,UAAXA,GAGJ3C,EAO8B6C,CAAW7C,GAC9C,MAAO8C,OAgBFC,EAAW,CAClBf,SAAS,EACTgB,qBAAqB,GAGZC,EAAUC,EAAQ,I,iBCxClBC,EAAkB,SAACC,GAC5B,IAAIC,EAAY,CAChBA,MAAkB,+FAIlB,OAHAA,EAAUC,QAAUF,EACpBC,EAAUE,SAAW,KACrBF,EAAUG,YAAc,EACjBH,GCqDJ,SAASI,EAAWzE,GACvB,IAAIqB,EAAUrB,EAAKqB,QACfqD,EAAU1E,EAAKsB,YACfrB,EApDR,SAA8B0E,GAC1B,GAAwB,IAApBA,EAASpB,OACT,MAAO,GAEX,IAJoC,EAIhCqB,EAAS,WAJuB,cAKZD,GALY,IAKpC,2BACIC,EAASA,EADqB,QACA,IANE,8BAQpC,OAAOA,EAAOC,UAAU,EAAGD,EAAOrB,OAAS,GA4C9BuB,CAAqB9E,EAAKC,QACnC8E,EA1CR,SAAsB7E,GAClB,GAAuB,IAAnBA,EAAQqD,OACR,MAAO,GAEX,IAJ2B,EAIvBqB,EAAS,aAJc,cAKN1E,GALM,IAK3B,2BAA8B,CAAC,IAApB8E,EAAmB,QAC1B,OAAQA,EAAO7D,MACX,KAAK3C,EACDoG,EAASA,EAASpG,EAAK,IAAMwG,EAAOC,KAAO,IAAMD,EAAOE,GAAK,IAC7D,MACJ,KAAKzG,EACDmG,EAASA,EAASnG,EAAO,IAAMuG,EAAOG,KAAO,IAC7C,MACJ,KAAKvG,EACDgG,EAASA,EAAShG,EAAW,IAAMoG,EAAOC,KAAO,IAAMD,EAAOE,GAAK,IACnE,MACJ,KAAKrG,EACD+F,EAASA,EAAS/F,EAAQ,IAAMmG,EAAOC,KAAO,IAAMD,EAAOE,GAAK,IAChE,MACJ,KAAKpG,EACD8F,EAASA,EAAS9F,EAAO,IAAMkG,EAAOG,KAAO,IAC7C,MACJ,KAAKxG,EACDiG,EAASA,EAASjG,EAAO,IAAMqG,EAAOC,KAAO,IAAMD,EAAOE,GAAK,IAC/D,MACJ,KAAKnG,EACD6F,EAASA,EAAS7F,EAAS,IAAMiG,EAAOC,KAAO,IAAMD,EAAOE,GAAK,IACjE,MACJ,KAAKxG,EACDkG,EAASA,EAASlG,EAAa,IAAMsG,EAAOI,MAAQ,IAAMJ,EAAOK,IAAM,IAAML,EAAOM,MAAQ,IAAMN,EAAOO,IAAM,MA7BhG,8BAmC3B,OAAOX,EAAOC,UAAU,EAAGD,EAAOrB,OAAS,GAO5BiC,CAAaxF,EAAKE,SACjC,OAAO,SAACP,GAMJ8F,MALY3C,EAAOL,EACf,YAAcpB,EACd,YAAcqD,EACdzE,EACA8E,EACO,CACPW,OAAQ,MACRC,QAAS,CACL,eAAgB,oCAGnBC,MAAK,SAAAC,GACF,GAAKA,EAASC,GAEP,OAAOD,EAASE,OADnB,MAAMF,KAGbD,MAAK,SAAAC,GACF,IACMjB,EADUV,EAAQ,IACD8B,OAAOH,EAAU9C,GAClCkD,EAAQrB,EAAOsB,cAAcD,MAC7BE,EAAUvB,EAAOsB,cAAcE,WAAWA,WAChDzG,EAAS,CACLgB,KAAM4B,EACN3B,QAASuF,IAEbxG,EAAS,CACLgB,KAAMxB,EACNyB,QAASqF,OAGhBI,OAAM,SAAAC,GACHrF,QAAQC,IAAIoF,GACZA,EAAMP,OACDH,MAAK,SAAAW,GACF,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YAiErE,SAASsC,EAA4BC,GACjC,IAAI/B,EAAS,GAcb,OAbAA,EAAOzG,GAAKwI,EAAKxI,GACjByG,EAAOzD,KAAOwF,EAAKxF,KACnByD,EAAOgC,aAAeD,EAAKC,kBACRC,IAAfF,EAAKG,QACLlC,EAAOkC,MAAQH,EAAKG,OACxBlC,EAAOjE,KAAOgG,EAAKhG,KACnBiE,EAAOmC,SAAWJ,EAAKI,SACvBnC,EAAOoC,YAAc,GACrBpC,EAAOoC,YAAY7I,GAAKwI,EAAKK,YAC7BpC,EAAOqC,OAAS,GAChBrC,EAAOqC,OAAO9I,GAAKwI,EAAKM,OACxBrC,EAAOqC,OAAOC,SAAW,GACzBtC,EAAOqC,OAAOC,SAAS/I,GAAKwI,EAAKQ,UAC1BvC,E,OC1IIwC,MArCf,SAAkBC,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAWD,EAAOnJ,GAClBwB,EAAWC,wBACX5B,EAAUC,cAEhB,SAASuJ,EAAcrJ,GACnBwB,ED+FD,SAAsBxB,GACzB,OAAO,SAACwB,GAEJ8F,MADY3C,EAAOL,EAAiB,IAAMtE,EAC/B,CACPuH,OAAQ,SACRC,QAAS,CACL,eAAgB,oCAGnBC,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EAENlG,EAAS,CAACgB,KAAMvB,OAGvBiH,OAAM,SAAAC,GACHA,EAAMP,OACDH,MAAK,SAAAW,GACF,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YCrHpDqD,CAAatJ,IAQ1B,OACI,sBAAKD,UAAU,iBAAf,UACI,qBAAKA,UAAU,SAAf,SAAyBqJ,IACzB,8BAAMD,EAAOnG,OACb,oCAAOmG,EAAON,YAAYU,EAA1B,MAAgCJ,EAAON,YAAYW,EAAnD,OACA,8BAAML,EAAOV,eACb,8BAAMU,EAAOP,WACb,8BAAMO,EAAOR,QACb,8BAAMQ,EAAO3G,KAAKiD,gBAClB,mCAAwBiD,IAAlBS,EAAOL,OAAuB,OAASK,EAAOL,OAAO9I,KAC3D,sBAAKD,UAAU,aAAf,UACI,qBAAKE,QAAS,kBAhBLD,EAgBuBoJ,OAfxCvJ,EAAQO,KAAK,SAAWJ,GAD5B,IAAqBA,GAgBT,SACI,cAAC,IAAD,CAAQ2C,MAAM,YAAY5C,UAAU,mBAExC,qBAAKE,QAAS,kBAAMoJ,EAAcD,IAAlC,SACI,cAAC,IAAD,CAAYrJ,UAAU,eAAe4C,MAAM,uBCXhD8G,MAxBf,SAAoBP,GAChB,IACIQ,EADEC,EAAUT,EAAMlB,QAEtB,YAAgBU,IAAZiB,EAEI,qBAAK5J,UAAU,wBAAf,SACI,qBAAKA,UAAU,SAAf,yBAIR4J,EAAQd,YAERa,EAAY,cAAC,EAAD,CAAUP,OAAQQ,GAAcA,EAAQ3J,IAC7C2J,EAAQvE,OAAS,IACxBsE,EAAYC,EAAQC,KAAI,SAACT,GAAD,OACpB,cAAC,EAAD,CAAUA,OAAQA,GAAaA,EAAOnJ,QAI1C,oCAAO0J,OCrBFG,EAAkB,kBAClBC,EAAyB,yBC0C/B,SAASC,IACZ,OAAO,SAACvI,GAEJ8F,MADY3C,oCACD,CACP4C,OAAQ,MACRC,QAAS,CACL,eAAgB,oCAGnBC,MAAK,SAAAC,GAEF,GADA5E,QAAQC,IAAI2E,EAASsC,SAChBtC,EAASC,GACV,MAAMD,EACV,OAAOA,EAASE,UAEnBH,MAAK,SAAAC,GACF5E,QAAQC,IAAI,cAAgB2E,GAC5B,IAEMmB,EAFU9C,EAAQ,IACD8B,OAAOH,EAAU9C,GACbqF,mBAAmBpB,YAAYqB,WAC1D1I,EAAS,CACLgB,KAAMqH,EACNpH,QAASoG,OAGhBX,OAAM,SAAAC,GACHrF,QAAQC,IAAIoF,GACZA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YCrClDkE,OAnCf,WACI,IAAMtK,EAAUC,cAiBhB,OACI,qBAAKC,UAAU,qBAAf,SACI,sBAAKA,UAAW,YAAhB,UACI,wBAAQC,GAAG,iBAAiBC,QAbxC,SAA6BC,GACzBA,EAAIC,iBACJN,EAAQO,KAAK,kBAWL,0BAGA,wBAAQJ,GAAG,iBAAiBC,QArBxC,SAA2BC,GACvBA,EAAIC,iBACJN,EAAQO,KAAK,gBAmBL,wBAGA,wBAAQJ,GAAG,iBAAiBC,QAdxC,SAAgCC,GAC5BA,EAAIC,iBACJN,EAAQO,KAAK,qBAYL,mCCMDgK,OAxBf,WACI,IAAM5I,EAAWC,wBACXI,EAAOF,uBAAY,SAAAC,GAAK,OAAIA,EAAMC,QAClCmG,EAAUrG,uBAAY,SAAAC,GAAK,OAAIA,EAAMoG,QAAQC,cAUnD,OAPAoC,qBAAU,WAEN7I,EAAS8E,EAAWzE,IACpBL,EAASuI,OACV,CAAClI,EAAKsB,YAAatB,EAAKqB,QAASrB,EAAKyI,WAAYzI,EAAKC,OAAQD,EAAKE,UAInE,sBAAKhC,UAAU,cAAf,UACI,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAYiI,QAASA,IACrB,cAAC,EAAD,QClBGuC,OATf,WACI,OACI,sBAAKxK,UAAU,eAAf,UACI,8CACA,cAAC,GAAD,Q,6CCLCyK,GAAqB,SAAC,GAAD,IAAE3G,EAAF,EAAEA,MAAO4G,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAUlI,EAA1B,EAA0BA,KAA1B,IAAgCmI,KAAOC,EAAvC,EAAuCA,QAASzC,EAAhD,EAAgDA,MAAO0C,EAAvD,EAAuDA,QAAvD,OAC9B,sBAAK9K,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,SAAwB0K,IACxB,mDAAW5G,GAAX,IAAkBiH,YAAaL,EAAOjI,KAAMA,EAAMuI,SAAUL,EACrD3K,UAAW6K,GAAWzC,EAAQ,cAAgB,MACpDyC,IAAazC,GAAS,sBAAMpI,UAAU,QAAhB,SAAyBoI,KAAmB0C,GAC/D,sBAAM9K,UAAU,QAAhB,SAAyB8K,SCPxBG,GAAQ,CAAC,GAAI,MAAO,QAAS,YAAa,SAC1CC,GAAS,CAAC,QAAS,MAAO,UCF1BC,GAAc,cACdC,GAAoB,oBC0C1B,SAASC,KACZ,OAAO,SAAC5J,GAEJ8F,MADY3C,gCACD,CACP4C,OAAQ,MACRC,QAAS,CACL,eAAgB,oCAGnBC,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EACV,OAAOA,EAASE,UAEnBH,MAAK,SAAAC,GACF5E,QAAQC,IAAI,cAAgB2E,GAC5B,IAEMoB,EAFU/C,EAAQ,IACD8B,OAAOH,EAAU9C,GAClByG,cAAcC,WAAWA,WAC/C9J,EAAS,CACLgB,KAAM0I,GACNzI,QAASqG,OAGhBZ,OAAM,SAAAC,GACHA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YAMjE,SAASsF,GAA6B/C,GAClC,IAAI/B,EAAS,GAMb,OALAA,EAAOzG,GAAKwI,EAAKxI,GACjByG,EAAO+E,OAAShD,EAAKgD,OACrB/E,EAAOgF,SAAWjD,EAAKiD,SACvBhF,EAAOsC,SAAW,GAClBtC,EAAOsC,SAAS/I,GAAKwI,EAAKQ,UACnBvC,ECxEX,IAoIeiF,gBAAU,CACrBlD,KAAM,mBACNmD,yBAAyB,GAFdD,EApIQ,SAACxC,GACpB,IAAO0C,EAAiD1C,EAAjD0C,aAA+BC,GAAkB3C,EAAnC4C,SAAmC5C,EAAzB6C,MAAyB7C,EAAlB2C,YAAY7L,EAAMkJ,EAANlJ,GAC5CwB,EAAWC,wBACX2H,EAAWzH,uBAAY,SAAAC,GAAK,OAAIA,EAAMoG,QAAQgE,aAAahM,MAC3DgD,EAAOrB,uBAAY,SAAAC,GAAK,OAAIA,EAAMoG,QAAQgE,aAAahJ,QACvD4F,EAAWjH,uBAAY,SAAAC,GAAK,OAAIA,EAAMoG,QAAQgE,aAAapD,YAC3DD,EAAQhH,uBAAY,SAAAC,GAAK,OAAIA,EAAMoG,QAAQgE,aAAarD,SACxDF,EAAe9G,uBAAY,SAAAC,GAAK,OAAIA,EAAMoG,QAAQgE,aAAavD,gBAC/DwD,EAAatK,uBAAY,SAAAC,GAAK,OAAIA,EAAMoG,QAAQgE,aAAaxJ,QAC7DqG,EAAclH,uBAAY,SAAAC,GAAK,OAAIA,EAAMoG,QAAQgE,aAAanD,eAE9DC,EAASnH,uBAAY,SAAAC,GAAK,OAAIA,EAAMoG,QAAQgE,aAAalD,UAEzDoD,EAAkBvK,uBAAY,SAAAC,GAAK,OAAIA,EAAMiH,YAAYqD,mBAEzDZ,GADe3J,uBAAY,SAAAC,GAAK,OAAIA,EAAMmH,SAASoD,iBACtCxK,uBAAY,SAAAC,GAAK,OAAIA,EAAMkH,OAAOsD,gBAC/CvM,EAAUC,cA+ChB,OA5CAuK,qBAAU,WACN7I,EZuLD,SAAyBxB,GAC5B,OAAO,SAACwB,GAEJ8F,MADY3C,EAAOL,EAAiB,IAAMtE,EAC/B,CACPuH,OAAQ,MACRC,QAAS,CACL,eAAgB,oCAGnBC,MAAK,SAAAC,GAEF,GADA5E,QAAQC,IAAI,UAAY2E,EAASsC,SAC5BtC,EAASC,GACV,MAAMD,EACV,OAAOA,EAASE,UAEnBH,MAAK,SAAAC,GACF5E,QAAQC,IAAI2E,GACZ,IACMyB,EADSrD,EAAQ+B,OAAOH,EAAU9C,GAClBmD,cAAcE,WAAWA,WAC/CzG,EAAS,CACLgB,KAAM6B,EACN5B,QAAS0G,OAGhBjB,OAAM,SAAAC,GACHA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YYpNhDoG,CAAgBrM,IACzBwB,EAASuI,KAETvI,EAAS4J,QACV,IAyBHf,qBAAU,WACNnB,EAAM6C,QACN7C,EAAMoD,WAAW,CACbtJ,KAAMA,EACNhD,GAAIoJ,EACJR,SAAUA,EACVD,MAAOA,EACPF,aAAcA,EACdjG,KAAMyJ,EACNpD,YAAaA,EAAY7I,GACzB8I,OAAQA,EAAO9I,OAEpB,CAACA,EAAIgD,EAAM4F,EAAUD,EAAOsD,EAAYpD,EAAaC,IAGpD,uBAAMyD,SAAUX,EAAc5L,GAAI,cAAlC,UACI,sBAAKD,UAAW,cAAhB,UACI,wCACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,OAAOR,KAAK,OACjBiK,UAAWjC,GAAoBC,MAAM,SAG5C,cAAC+B,GAAA,EAAD,CAAOxJ,KAAK,WAAWR,KAAK,SACrBiK,UAAWjC,GAAoBC,MAAM,aAG5C,cAAC+B,GAAA,EAAD,CAAOxJ,KAAK,QAAQR,KAAK,SAClBiK,UAAWjC,GAAoBC,MAAM,UAG5C,cAAC+B,GAAA,EAAD,CAAOxJ,KAAK,eAAeR,KAAK,OACzBiK,UAAWjC,GAAoBC,MAAM,gBACrCC,SAAS,aAGhB,qBAAK3K,UAAU,QAAf,kBACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,OACLyJ,UAAU,SAAShC,MAAM,OADhC,SAEKO,GAAMpB,KAAI,SAAA8C,GAAC,OAAI,yBAAgB7J,MAAO6J,EAAGC,SAAUV,IAAeS,EAAnD,UAAuDA,EAAvD,MAAaA,QAEjC,8BACI,wBAAQ1M,GAAG,gBAAgB4M,SAAUf,EAArC,yBAIR,sBAAK9L,UAAW,cAAhB,UACI,6CACA,qBAAKA,UAAU,QAAf,qBACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,cAAchD,GAAG,cACtByM,UAAU,SAAShC,MAAM,cADhC,SAEKyB,EAAgBtC,KAAI,SAAA8C,GAAC,OAAI,yBAAmB7J,MAAO6J,EAAE1M,GAA5B,cAAkC0M,EAAEnD,EAApC,MAA0CmD,EAAElD,EAA5C,OAAakD,EAAE1M,SAE7C,sBAAKD,UAAW,cAAhB,UACI,8BACI,wBAAQC,GAAI,gBAAiBC,QA7EjD,SAA+BC,GAC3BA,EAAIC,iBACJ,IAAIiC,EAAUC,SAASC,eAAe,eACtCzC,EAAQO,KAAK,qBAAuBgC,EAAQS,QA0E5B,oBAEJ,8BACI,wBAAQ7C,GAAI,gBAAiBC,QA1EjD,SAAiCC,GAC7BA,EAAIC,iBACJN,EAAQO,KAAK,qBAwEG,4BAMZ,sBAAKL,UAAW,cAAhB,UACI,wCACA,qBAAKA,UAAU,QAAf,yBACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,SAAShD,GAAG,SACjByM,UAAU,SADjB,SAEKnB,EAAW1B,KAAI,SAAA8C,GAAC,OAAI,wBAAmB7J,MAAO6J,EAAE1M,GAA5B,SAAiC0M,EAAE1M,IAAtB0M,EAAE1M,SAExC,sBAAKD,UAAW,cAAhB,UACI,8BACI,wBAAQC,GAAI,gBAAiBC,QApFjD,SAAgCC,GAC5BA,EAAIC,iBACJ,IAAIiC,EAAUC,SAASC,eAAe,UACtCzC,EAAQO,KAAK,gBAAkBgC,EAAQS,QAiFvB,oBAEJ,8BACI,wBAAQ7C,GAAI,gBAAiBC,QAjFjD,SAAkCC,GAC9BA,EAAIC,iBACJN,EAAQO,KAAK,gBA+EG,kCChHTyM,OAlBf,WACI,IAAO7M,EAAM8M,cAAN9M,GACDwB,EAAWC,wBAOjB,OACI,sBAAK1B,UAAU,eAAf,UACI,mDAAsBC,EAAtB,OACA,uBACA,cAAC,GAAD,CAAgBA,GAAIA,EAAIuM,SARf,SAACQ,GACdvL,Eb4HD,SAAsB2H,GACzB,IAAI6D,EAAMlH,EAAQmH,OAAO1E,EAA4BY,GAASvD,GAE9D,OADA9C,QAAQC,IAAI,SAAWiK,GAChB,SAACxL,GAEJ8F,MADY3C,gCACD,CACP4C,OAAQ,MACRC,QAAS,CACL,eAAgB,kCAEpB0F,KAAM,0CAA4CF,EAAM,+CAEvDvF,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EACV7H,GAAQO,KAAK,IACb+M,OAAOpE,SAASqE,QAAO,MAE1BlF,OAAM,SAAAC,GACHA,EAAMP,OACDH,MAAK,SAAAW,GACF,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YapJpDoH,CAAaN,WCiEfrB,gBAAU,CACrBlD,KAAM,sBADKkD,EApEU,SAACxC,GACtB,IAAO0C,EAAiD1C,EAAjD0C,aAA+BC,GAAkB3C,EAAnC4C,SAAmC5C,EAAzB6C,MAAyB7C,EAAlB2C,YAChCrK,GADkD0H,EAANlJ,GACjCyB,yBACXwK,EAAatK,uBAAY,SAAAC,GAAK,OAAIA,EAAMoG,QAAQgE,aAAaxJ,QAC7D0J,EAAkBvK,uBAAY,SAAAC,GAAK,OAAIA,EAAMiH,YAAYqD,mBACzDZ,EAAa3J,uBAAY,SAAAC,GAAK,OAAIA,EAAMkH,OAAOsD,eAgBrD,OAdA/B,qBAAU,WACN7I,EAASuI,KACTvI,EAAS4J,QACV,IAEHf,qBAAU,WACNnB,EAAM6C,QACN7C,EAAMoD,WAAW,CACb9J,KAAMwI,GAAM,GACZnC,YAAaqD,EAAgB,GAAGlM,GAChC8I,OAAQwC,EAAW,GAAGtL,OAE3B,CAACkM,EAAiBZ,IAGjB,uBAAMiB,SAAUX,EAAc5L,GAAI,cAAlC,UACI,sBAAKD,UAAW,cAAhB,UACI,wCACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,OAAOR,KAAK,OACjBiK,UAAWjC,GAAoBC,MAAM,SAG5C,cAAC+B,GAAA,EAAD,CAAOxJ,KAAK,WAAWR,KAAK,SACrBiK,UAAWjC,GAAoBC,MAAM,aAG5C,cAAC+B,GAAA,EAAD,CAAOxJ,KAAK,QAAQR,KAAK,SAClBiK,UAAWjC,GAAoBC,MAAM,UAG5C,qBAAK1K,UAAU,QAAf,kBACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,OACLyJ,UAAU,SAAShC,MAAM,OADhC,SAEKO,GAAMpB,KAAI,SAAA8C,GAAC,OAAI,yBAAgB7J,MAAO6J,EAAGC,SAAUV,IAAeS,EAAnD,UAAuDA,EAAvD,MAAaA,QAEjC,8BACI,wBAAQ1M,GAAG,gBAAgB4M,SAAUf,EAArC,yBAIR,sBAAK9L,UAAW,cAAhB,UACI,6CACA,qBAAKA,UAAU,QAAf,qBACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,cAAchD,GAAG,cACtByM,UAAU,SAAShC,MAAM,cADhC,SAEKyB,EAAgBtC,KAAI,SAAA8C,GAAC,OAAI,yBAAmB7J,MAAO6J,EAAE1M,GAA5B,cAAkC0M,EAAEnD,EAApC,MAA0CmD,EAAElD,EAA5C,OAAakD,EAAE1M,YAIjD,sBAAKD,UAAW,cAAhB,UACI,wCACA,qBAAKA,UAAU,QAAf,yBACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,SAAShD,GAAG,SACjByM,UAAU,SADjB,SAEKnB,EAAW1B,KAAI,SAAA8C,GAAC,OAAI,wBAAmB7J,MAAO6J,EAAE1M,GAA5B,SAAiC0M,EAAE1M,IAAtB0M,EAAE1M,kBChDzCsN,OAjBf,WAEI,IAAM9L,EAAWC,wBAOjB,OACI,sBAAK1B,UAAU,eAAf,UACI,+CACA,cAAC,GAAD,CAAkBwM,SART,SAACQ,GACdvL,Ef8KD,SAAsB2H,GACzB,IAAI6D,EAAMlH,EAAQmH,OAAO1E,EAA4BY,GAASvD,GAE9D,OADA9C,QAAQC,IAAI,SAAWiK,GAChB,SAACxL,GAEJ8F,MADY3C,gCACD,CACP4C,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAEpB0F,KAAM,0CAA4CF,EAAM,+CAEvDvF,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EAEN7H,GAAQO,KAAK,IACb+M,OAAOpE,SAASqE,QAAO,MAG9BlF,OAAM,SAAAC,GACHA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YevMhDsH,CAAaR,W,8BCNxBS,I,MAAc,SAAC,GAAD,IAAE3J,EAAF,EAAEA,MAAOrB,EAAT,EAASA,KAAT,IAAemI,KAAOC,EAAtB,EAAsBA,QAASzC,EAA/B,EAA+BA,MAA/B,EAAsC0C,QAAtC,OAChB,qBAAK9K,UAAU,aAAf,SACI,mDAAW8D,GAAX,IAAkBrB,KAAMA,EACjBzC,UAAW6K,GAAWzC,EAAQ,cAAgB,UAIvDsF,GAAW,SAAA5K,GAAK,OAAIA,OAAQ6F,EAAY,YA6B/BgD,gBAAU,CACrBlD,KAAM,iBACNkF,gBA7BgB,SAACjH,EAAQjF,GAAT,OAChBA,EAASuK,aAAM,qBA0BJL,EAvBM,SAACxC,GAClB,IAAO0C,EAA4B1C,EAA5B0C,aAAcC,EAAc3C,EAAd2C,WACrB,OACI,uBAAMU,SAAUX,EAAhB,UACI,iEACA,sBAAK7L,UAAU,kBAAf,UACI,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,OAAOR,KAAK,OACjBiK,UAAWe,GAAa/C,MAAM,OAC9BkD,SAAU,CAACF,MAElB,0CACA,cAACjB,GAAA,EAAD,CAAOxJ,KAAK,KAAKR,KAAK,OACfiK,UAAWe,GAAa/C,MAAM,KAC9BkD,SAAU,CAACF,SAGtB,8BACI,wBAAQzN,GAAG,SAAS4M,SAAUf,EAA9B,wBCMD+B,OApCf,WACI,IAAMpM,EAAWC,wBACXM,EAAUJ,uBAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKE,WA2BhD,OACI,qBAAKhC,UAAU,eAAf,SACI,cAAC,GAAD,CAAcwM,SA3BL,SAACQ,GACd,IAD2B,EACvB3K,EAAUC,SAASC,eAAe,aADX,cAENP,GAFM,IAE3B,2BAA8B,CACN,OADM,QACfiB,MACPxB,EAAS,CACLgB,KAAM,gBACNC,QAAS,QANM,8BAU3B,IAAIoE,EAAS,CACbA,KAAc,MACdA,EAAOC,KAAOiG,EAASjG,KACvBD,EAAOE,GAAKgG,EAAShG,GACrBvF,EAAS,CACLgB,KAAM,aACNC,QAASoE,IAEbzE,EAAQM,MAAMC,MAAQ,mBACtBnB,EAAS,CACLgB,KAAM,aACNC,SAAS,UCzBfoL,GAAY,SAAC,GAAD,IAAEhK,EAAF,EAAEA,MAAOrB,EAAT,EAASA,KAAT,IAAemI,KAAOC,EAAtB,EAAsBA,QAASzC,EAA/B,EAA+BA,MAA/B,EAAsC0C,QAAtC,OACd,qBAAK9K,UAAU,WAAf,SACI,mDAAW8D,GAAX,IAAkBrB,KAAMA,EACjBzC,UAAW6K,GAAWzC,EAAQ,cAAgB,SAIvDsF,GAAW,SAAA5K,GAAK,OAAIA,OAAQ6F,EAAY,YAwB/BgD,gBAAU,CACrBlD,KAAM,mBACNkF,gBAxBgB,SAACjH,EAAQjF,GAAT,OAChBA,EAASuK,aAAM,uBAqBJL,EAlBQ,SAACxC,GACpB,IAAO0C,EAA4B1C,EAA5B0C,aAAcC,EAAc3C,EAAd2C,WACrB,OACI,uBAAMU,SAAUX,EAAhB,UACI,gEACA,qBAAK7L,UAAU,qBAAf,SACI,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,OAAOR,KAAK,OACjBiK,UAAWoB,GAAWpD,MAAM,OAC5BkD,SAAU,CAACF,QAGtB,8BACI,wBAAQzN,GAAG,SAAS4M,SAAUf,EAA9B,wBCEDiC,OA1Bf,WACI,IAAMtM,EAAWC,wBAkBjB,OACI,qBAAK1B,UAAU,eAAf,SACI,cAAC,GAAD,CAAgBwM,SAlBP,SAACQ,GACd,IAAI3K,EAAUC,SAASC,eAAe,eAClCuE,EAAS,CACbA,KAAc,QACdA,EAAOG,KAAO+F,EAAS/F,KACvBxF,EAAS,CACLgB,KAAMnB,EACNoB,QAASoE,IAEbzE,EAAQM,MAAMC,MAAQ,mBACtBnB,EAAS,CACLgB,KAAMpB,EACNqB,SAAS,UChBf+K,GAAc,SAAC,GAAD,IAAE3J,EAAF,EAAEA,MAAOrB,EAAT,EAASA,KAAT,IAAemI,KAAOC,EAAtB,EAAsBA,QAASzC,EAA/B,EAA+BA,MAA/B,EAAsC0C,QAAtC,OAChB,qBAAK9K,UAAU,aAAf,SACI,mDAAW8D,GAAX,IAAkBrB,KAAMA,EACjBzC,UAAW6K,GAAWzC,EAAQ,cAAgB,SAIvDsF,GAAW,SAAA5K,GAAK,OAAIA,OAAQ6F,EAAY,YAyC/BgD,gBAAU,CACrBlD,KAAM,yBACNkF,gBAzCgB,SAACjH,EAAQjF,GAAT,OAChBA,EAASuK,aAAM,6BAsCJL,EAnCc,SAACxC,GAC1B,IAAO0C,EAA4B1C,EAA5B0C,aAAcC,EAAc3C,EAAd2C,WACrB,OACI,uBAAMU,SAAUX,EAAhB,UACI,gEACA,sBAAK7L,UAAU,kBAAf,UACI,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,QAAQR,KAAK,OAClBiK,UAAWe,GAAa/C,MAAM,OAC9BkD,SAAU,CAACF,MAElB,0CACA,cAACjB,GAAA,EAAD,CAAOxJ,KAAK,MAAMR,KAAK,OAChBiK,UAAWe,GAAa/C,MAAM,KAC9BkD,SAAU,CAACF,SAGtB,gEACA,sBAAK1N,UAAU,kBAAf,UACI,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,QAAQR,KAAK,OAClBiK,UAAWe,GAAa/C,MAAM,OAC9BkD,SAAU,CAACF,MAElB,0CACA,cAACjB,GAAA,EAAD,CAAOxJ,KAAK,MAAMR,KAAK,OAChBiK,UAAWe,GAAa/C,MAAM,KAC9BkD,SAAU,CAACF,SAGtB,8BACI,wBAAQzN,GAAG,SAAS4M,SAAUf,EAA9B,wBCZDkC,OA7Bf,WACI,IAAMvM,EAAWC,wBAqBjB,OACI,qBAAK1B,UAAU,eAAf,SACI,cAAC,GAAD,CAAsBwM,SArBb,SAACQ,GACd,IAAI3K,EAAUC,SAASC,eAAe,qBAClCuE,EAAS,GACbA,EAAO7D,KAAOzC,EACdsG,EAAOI,MAAQ8F,EAAS9F,MACxBJ,EAAOK,IAAM6F,EAAS7F,IACtBL,EAAOM,MAAQ4F,EAAS5F,MACxBN,EAAOO,IAAM2F,EAAS3F,IACtB5F,EAAS,CACLgB,KAAM,aACNC,QAASoE,IAEbzE,EAAQM,MAAMC,MAAQ,mBACtBnB,EAAS,CACLgB,KAAM,aACNC,SAAS,U,qBClBfuL,GAAY,SAAC,GAAD,IAAEnK,EAAF,EAAEA,MAAO4G,EAAT,EAASA,MAAOjI,EAAhB,EAAgBA,KAAMyL,EAAtB,EAAsBA,UAAtB,IAAiCtD,KAAOC,EAAxC,EAAwCA,QAASzC,EAAjD,EAAiDA,MAAO0C,EAAxD,EAAwDA,QAAxD,OACd,sBAAK9K,UAAU,WAAf,UACI,mDAAW8D,GAAX,IAAkBiH,YAAaL,EAAOjI,KAAMA,EAAMyL,UAAWA,EACtDlO,UAAW6K,GAAWzC,EAAQ,cAAgB,MACpDyC,IAAazC,GAAS,sBAAMpI,UAAU,QAAhB,SAAyBoI,KAAmB0C,GAC/D,sBAAM9K,UAAU,QAAhB,SAAyB8K,SAI/B4C,GAAW,SAAA5K,GAAK,OAAIA,OAAQ6F,EAAY,YAExCwF,GAAY,SAAArL,GACd,OAAIsL,KAAOtL,EAAO,cAAc,GAAMuL,eAClC,EAEO,qBAMTH,GAAY,SAACI,GACf,IAAIC,EACAnB,OAAOvJ,MACP0K,EAAUnB,OAAOvJ,MAAM2K,QAClBF,IACLC,EAAUD,EAAGG,OACjB,IAAIC,EAAWJ,EAAGvK,OAAOjB,MAAMuC,OACf,IAAZkJ,IACiB,IAAbG,GAA+B,IAAbA,IAClBJ,EAAGvK,OAAOjB,OAAS,OAgChB6I,gBAAU,CACrBlD,KAAM,iBACNkF,gBA9CgB,SAACjH,EAAQjF,GAAT,OAChBA,EAASuK,aAAM,qBA2CJL,EA1BM,SAACxC,GAClB,IAAO0C,EAA4B1C,EAA5B0C,aAAcC,EAAc3C,EAAd2C,WACrB,OACI,uBAAMU,SAAUX,EAAhB,UACI,mEACA,sBAAK7L,UAAU,uBAAf,UACI,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,OAAOR,KAAK,OACjBiK,UAAWuB,GAAWvD,MAAM,aAC5BwD,UAAWA,GACXN,SAAU,CAACF,GAAUS,MAE5B,qBAAKlO,GAAG,YAAR,qBACA,cAACwM,GAAA,EAAD,CAAOxJ,KAAK,KAAKR,KAAK,OACfiK,UAAWuB,GAAWvD,MAAM,aAC5BwD,UAAWA,GACXN,SAAU,CAACF,GAAUS,SAGhC,8BACI,wBAAQlO,GAAG,SAAS4M,SAAUf,EAA9B,wBC5BD6C,OA3Bf,WACI,IAAMlN,EAAWC,wBAmBjB,OACI,qBAAK1B,UAAU,eAAf,SACI,cAAC4O,GAAD,CAAgBpC,SAnBP,SAACQ,GACd,IAAI3K,EAAUC,SAASC,eAAe,eAClCuE,EAAS,GACbA,EAAO7D,KAAOxC,EACdqG,EAAOC,KAAOiG,EAASjG,KACvBD,EAAOE,GAAKgG,EAAShG,GACrBvF,EAAS,CACLgB,KAAM,aACNC,QAASoE,IAEbzE,EAAQM,MAAMC,MAAQ,mBACtBnB,EAAS,CACLgB,KAAM,aACNC,SAAS,UCjBf+K,GAAc,SAAC,GAAD,IAAE3J,EAAF,EAAEA,MAAOrB,EAAT,EAASA,KAAT,IAAemI,KAAOC,EAAtB,EAAsBA,QAASzC,EAA/B,EAA+BA,MAA/B,EAAsC0C,QAAtC,OAChB,qBAAK9K,UAAU,aAAf,SACI,mDAAW8D,GAAX,IAAkBrB,KAAMA,EACjBzC,UAAW6K,GAAWzC,EAAQ,cAAgB,SAIvDsF,GAAW,SAAA5K,GAAK,OAAIA,OAAQ6F,EAAY,YA6B/BgD,gBAAU,CACrBlD,KAAM,uBACNkF,gBA7BgB,SAACjH,EAAQjF,GAAT,OAChBA,EAASuK,aAAM,2BA0BJL,EAvBY,SAACxC,GACxB,IAAO0C,EAA4B1C,EAA5B0C,aAAcC,EAAc3C,EAAd2C,WACrB,OACI,uBAAMU,SAAUX,EAAhB,UACI,uEACA,sBAAK7L,UAAU,kBAAf,UACI,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,OAAOR,KAAK,OACjBiK,UAAWe,GAAa/C,MAAM,OAC9BkD,SAAU,CAACF,MAElB,0CACA,cAACjB,GAAA,EAAD,CAAOxJ,KAAK,KAAKR,KAAK,OACfiK,UAAWe,GAAa/C,MAAM,KAC9BkD,SAAU,CAACF,SAGtB,8BACI,wBAAQzN,GAAG,SAAS4M,SAAUf,EAA9B,wBCFD+C,OA3Bf,WACI,IAAMpN,EAAWC,wBAmBjB,OACI,qBAAK1B,UAAU,eAAf,SACI,cAAC,GAAD,CAAoBwM,SAnBX,SAACQ,GACd,IAAI3K,EAAUC,SAASC,eAAe,mBAClCuE,EAAS,GACbA,EAAO7D,KAAOvC,EACdoG,EAAOC,KAAOiG,EAASjG,KACvBD,EAAOE,GAAKgG,EAAShG,GACrBvF,EAAS,CACLgB,KAAM,aACNC,QAASoE,IAEbzE,EAAQM,MAAMC,MAAQ,mBACtBnB,EAAS,CACLgB,KAAM,aACNC,SAAS,UCjBf+K,GAAc,SAAC,GAAD,IAAE3J,EAAF,EAAEA,MAAOrB,EAAT,EAASA,KAAT,IAAemI,KAAOC,EAAtB,EAAsBA,QAASzC,EAA/B,EAA+BA,MAA/B,EAAsC0C,QAAtC,OAChB,qBAAK9K,UAAU,aAAf,SACI,mDAAW8D,GAAX,IAAkBrB,KAAMA,EACjBzC,UAAW6K,GAAWzC,EAAQ,cAAgB,SAIvDsF,GAAW,SAAA5K,GAAK,OAAIA,OAAQ6F,EAAY,YA6B/BgD,gBAAU,CACrBlD,KAAM,oBACNkF,gBA7BgB,SAACjH,EAAQjF,GAAT,OAChBA,EAASuK,aAAM,wBA0BJL,EAvBS,SAACxC,GACrB,IAAO0C,EAA4B1C,EAA5B0C,aAAcC,EAAc3C,EAAd2C,WACrB,OACI,uBAAMU,SAAUX,EAAhB,UACI,oEACA,sBAAK7L,UAAU,kBAAf,UACI,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,OAAOR,KAAK,OACjBiK,UAAWe,GAAa/C,MAAM,OAC9BkD,SAAU,CAACF,MAElB,0CACA,cAACjB,GAAA,EAAD,CAAOxJ,KAAK,KAAKR,KAAK,OACfiK,UAAWe,GAAa/C,MAAM,KAC9BkD,SAAU,CAACF,SAGtB,8BACI,wBAAQzN,GAAG,SAAS4M,SAAUf,EAA9B,wBCFDgD,OA3Bf,WACI,IAAMrN,EAAWC,wBAmBjB,OACI,qBAAK1B,UAAU,eAAf,SACI,cAAC,GAAD,CAAiBwM,SAnBR,SAACQ,GACd,IAAI3K,EAAUC,SAASC,eAAe,gBAClCuE,EAAS,GACbA,EAAO7D,KAAOtC,EACdmG,EAAOC,KAAOiG,EAASjG,KACvBD,EAAOE,GAAKgG,EAAShG,GACrBvF,EAAS,CACLgB,KAAM,aACNC,QAASoE,IAEbzE,EAAQM,MAAMC,MAAQ,mBACtBnB,EAAS,CACLgB,KAAM,aACNC,SAAS,UCYNiJ,gBAAU,CACrBlD,KAAM,mBACNkF,gBA/BgB,SAACjH,EAAQjF,GAAT,OAChBA,EAASuK,aAAM,sBA+Bf4B,SA7BiC,SAAAmB,GACjC,IAAIC,EAAS,GAIb,OAHKD,EAAOE,UACRD,EAAOC,QAAU,YAEdD,IAqBIrD,EAlBQ,SAACxC,GACpB,IAAO0C,EAA4B1C,EAA5B0C,aAAcC,EAAc3C,EAAd2C,WACrB,OACI,uBAAMU,SAAUX,EAAhB,UACI,0DACA,sBAAK7L,UAAU,cAAf,UACI,kCAAO,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,UAAUyJ,UAAU,QAAQjK,KAAK,QAAQK,MAAM,QAAlE,SACA,kCAAO,cAAC2J,GAAA,EAAD,CAAOxJ,KAAK,UAAUyJ,UAAU,QAAQjK,KAAK,QAAQK,MAAM,UAAlE,WACA,kCAAO,cAAC2J,GAAA,EAAD,CAAOxJ,KAAK,UAAUyJ,UAAU,QAAQjK,KAAK,QAAQK,MAAM,cAAlE,eACA,kCAAO,cAAC2J,GAAA,EAAD,CAAOxJ,KAAK,UAAUyJ,UAAU,QAAQjK,KAAK,QAAQK,MAAM,UAAlE,cAEJ,8BACI,wBAAQ7C,GAAG,SAAS4M,SAAUf,EAA9B,wBCIDoD,OA1Bf,WACI,IAAMzN,EAAWC,wBAkBjB,OACI,qBAAK1B,UAAU,eAAf,SACI,cAAC,GAAD,CAAgBwM,SAlBP,SAACQ,GACd,IAAI3K,EAAUC,SAASC,eAAe,eAClCuE,EAAS,GACbA,EAAO7D,KAAOrC,EACdkG,EAAOG,KAAO+F,EAASiC,QACvBxN,EAAS,CACLgB,KAAM,aACNC,QAASoE,IAEbzE,EAAQM,MAAMC,MAAQ,mBACtBnB,EAAS,CACLgB,KAAM,aACNC,SAAS,UCTf+K,GAAc,SAAC,GAAD,IAAE3J,EAAF,EAAEA,MAAOrB,EAAT,EAASA,KAAT,IAAemI,KAAOC,EAAtB,EAAsBA,QAASzC,EAA/B,EAA+BA,MAA/B,EAAsC0C,QAAtC,OAChB,qBAAK9K,UAAU,aAAf,SACI,mDAAW8D,GAAX,IAAkBrB,KAAMA,EACjBzC,UAAW6K,GAAWzC,EAAQ,cAAgB,SAIvDsF,GAAW,SAAA5K,GAAK,OAAIA,OAAQ6F,EAAY,YA6B/BgD,gBAAU,CACrBlD,KAAM,qBACNkF,gBA7BgB,SAACjH,EAAQjF,GAAT,OAChBA,EAASuK,aAAM,yBA0BJL,EAvBU,SAACxC,GACtB,IAAO0C,EAA4B1C,EAA5B0C,aAAcC,EAAc3C,EAAd2C,WACrB,OACI,uBAAMU,SAAUX,EAAhB,UACI,wEACA,sBAAK7L,UAAU,kBAAf,UACI,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,OAAOR,KAAK,OACjBiK,UAAWe,GAAa/C,MAAM,OAC9BkD,SAAU,CAACF,MAElB,0CACA,cAACjB,GAAA,EAAD,CAAOxJ,KAAK,KAAKR,KAAK,OACfiK,UAAWe,GAAa/C,MAAM,KAC9BkD,SAAU,CAACF,SAGtB,8BACI,wBAAQzN,GAAG,SAAS4M,SAAUf,EAA9B,wBCTDqD,OA3Bf,WACI,IAAM1N,EAAWC,wBAmBjB,OACI,qBAAK1B,UAAU,eAAf,SACI,cAAC,GAAD,CAAkBwM,SAnBT,SAACQ,GACd,IAAI3K,EAAUC,SAASC,eAAe,iBAClCuE,EAAS,GACbA,EAAO7D,KAAOpC,EACdiG,EAAOC,KAAOiG,EAASjG,KACvBD,EAAOE,GAAKgG,EAAShG,GACrBvF,EAAS,CACLgB,KAAM,aACNC,QAASoE,IAEbzE,EAAQM,MAAMC,MAAQ,mBACtBnB,EAAS,CACLgB,KAAM,aACNC,SAAS,UCRN0M,I,OAXD,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,OAAQxM,EAAyB,EAAzBA,UAAWyM,EAAc,EAAdA,SAC/B,OACI,qBAAKtP,UAAWqP,EAAS,eAAiB,QACrCnP,QAAS,kBAAM2C,GAAU,IAD9B,SAEI,qBAAK7C,UAAWqP,EAAS,uBAAyB,gBAC7CnP,QAAS,SAAA0F,GAAC,OAAIA,EAAE2J,mBADrB,SAEKD,QCwCF3D,gBAAU,CACrBlD,KAAM,wBACNmD,yBAAyB,GAFdD,EAzCa,SAACxC,GACzB,IAAO0C,EAAiD1C,EAAjD0C,aAA+BC,GAAkB3C,EAAnC4C,SAAmC5C,EAAzB6C,MAAyB7C,EAAlB2C,YAAY7L,EAAMkJ,EAANlJ,GAC5CwB,EAAWC,wBACXoH,EAAclH,uBAAY,SAAAC,GAAK,OAAIA,EAAMiH,YAAY0G,qBAgB3D,OAdAlF,qBAAU,WAEN7I,E7BPD,SAA8BxB,GACjC,OAAO,SAACwB,GAEJ8F,MADY3C,EAAOH,EAAgB,IAAMxE,EAC9B,CACPuH,OAAQ,MACRC,QAAS,CACL,eAAgB,oCAGnBC,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EACV,OAAOA,EAASE,UAEnBH,MAAK,SAAAC,GACF5E,QAAQC,IAAI2E,GACZ,IACMwC,EADSpE,EAAQ+B,OAAOH,EAAU9C,GACdqF,mBAAmBpB,YAAYqB,WACzD1I,EAAS,CACLgB,KAAMsH,EACNrH,QAASyH,OAGhBhC,OAAM,SAAAC,GACHrF,QAAQC,IAAIoF,GACZA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,Y6BtBhDuJ,CAAqBxP,MAC/B,IAEHqK,qBAAU,WACNnB,EAAM6C,QACN7C,EAAMoD,WAAW,CACbtM,GAAI6I,EAAY7I,GAChBuJ,EAAGV,EAAYU,EACfC,EAAGX,EAAYW,MAEpB,CAACX,IAGA,sBAAM0D,SAAUX,EAAc5L,GAAI,cAAlC,SACI,sBAAKD,UAAW,cAAhB,UACI,6CAEA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,IAAIR,KAAK,SACdiK,UAAWjC,GAAoBC,MAAM,MAG5C,cAAC+B,GAAA,EAAD,CAAOxJ,KAAK,IAAIR,KAAK,SACdiK,UAAWjC,GAAoBC,MAAM,MAG5C,8BACI,wBAAQzK,GAAG,gBAAgB4M,SAAUf,EAArC,8BChBL4D,OAlBf,WACI,IAAOzP,EAAM8M,cAAN9M,GACDwB,EAAWC,wBACXiO,EAAgB/N,uBAAY,SAAAC,GAAK,OAAIA,EAAMiH,YAAY0G,kBAAkBvP,MAM/E,OACI,sBAAKD,UAAU,eAAf,UACI,wDAA2BC,EAA3B,OACA,uBACA,cAAC,GAAD,CAAqBA,GAAIA,EAAIuM,SARpB,SAACQ,GACdvL,E9B2ED,SAA2BqH,EAAa7I,GAC3C,IAAIgN,EAAMlH,EAAQmH,OATtB,SAA0CzE,GACtC,IAAI/B,EAAS,GAIb,OAHAA,EAAOzG,GAAKwI,EAAKxI,GACjByG,EAAO8C,EAAIf,EAAKe,EAChB9C,EAAO+C,EAAIhB,EAAKgB,EACT/C,EAIkBkJ,CAAiC9G,GAAcjD,GAExE,OADA9C,QAAQC,IAAI,SAAWiK,GAChB,SAACxL,GAEJ8F,MADY3C,oCACD,CACP4C,OAAQ,MACRC,QAAS,CACL,eAAgB,kCAEpB0F,KAAM,gDAAkDF,EAAM,qDAE7DvF,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EACV7H,GAAQO,KAAK,SAAWJ,GACxBmN,OAAOpE,SAASqE,QAAO,MAE1BlF,OAAM,SAAAC,GACHA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,Y8BlGhD2J,CAAkB7C,EAAU2C,WCiB9BhE,gBAAU,CACrBlD,KAAM,0BACNmD,yBAAyB,GAFdD,EAxBe,SAACxC,GAC3B,IAAO0C,EAAiD1C,EAAjD0C,aAA+BC,GAAkB3C,EAAnC4C,SAAmC5C,EAAzB6C,MAAyB7C,EAAlB2C,YAAkB3C,EAANlJ,GAElD,OACI,sBAAMuM,SAAUX,EAAhB,SACI,sBAAK7L,UAAW,cAAhB,UACI,6CACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,IAAIR,KAAK,SACdiK,UAAWjC,GAAoBC,MAAM,MAG5C,cAAC+B,GAAA,EAAD,CAAOxJ,KAAK,IAAIR,KAAK,SACdiK,UAAWjC,GAAoBC,MAAM,MAG5C,8BACI,wBAAQzK,GAAG,gBAAgB4M,SAAUf,EAArC,8BCELgE,OAlBf,WAEI,IAAMrO,EAAWC,wBAOjB,OANgBE,uBAAY,SAAAC,GAAK,OAAIA,EAAMiH,YAAY0G,kBAAkBvP,MAOrE,sBAAKD,UAAU,eAAf,UACI,oDACA,uBACA,cAAC,GAAD,CAAuBwM,SARd,SAACQ,GACdvL,EhCyGD,SAA2BqH,EAAa7I,GAC3C,IAAIgN,EAAMlH,EAAQmH,OAAOpE,EAAajD,GACtC,OAAO,SAACpE,GAEJ8F,MADY3C,oCACD,CACP4C,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAEpB0F,KAAM,gDAAkDF,EAAM,qDAE7DvF,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EACV7H,GAAQO,KAAK,IACb+M,OAAOpE,SAASqE,QAAO,MAE1BlF,OAAM,SAAAC,GACHA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YgC/HhD6J,CAAkB/C,WCZtBgD,GAAgB,gBAChBC,GAAsB,sBCyC5B,SAASC,KACZ,OAAO,SAACzO,GAEJ8F,MADY3C,kCACD,CACP4C,OAAQ,MACRC,QAAS,CACL,eAAgB,oCAGnBC,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EACV,OAAOA,EAASE,UAEnBH,MAAK,SAAAC,GACF5E,QAAQC,IAAI,cAAgB2E,GAC5B,IAEMsB,EAFUjD,EAAQ,IACD8B,OAAOH,EAAU9C,GACfsL,gBAAgBlH,UAAUD,SACnDvH,EAAS,CACLgB,KAAMuN,GACNtN,QAASuG,OAGhBd,OAAM,SAAAC,GACHA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YC/DjE,IAyCeyF,gBAAU,CACrBlD,KAAM,qBACNmD,yBAAyB,GAFdD,EAzCU,SAACxC,GACtB,IAAO0C,EAAiD1C,EAAjD0C,aAA+BC,GAAkB3C,EAAnC4C,SAAmC5C,EAAzB6C,MAAyB7C,EAAlB2C,YAAY7L,EAAMkJ,EAANlJ,GAC5CwB,EAAWC,wBACXsH,EAAWpH,uBAAY,SAAAC,GAAK,OAAIA,EAAMmH,SAASoH,kBAgBrD,OAdA9F,qBAAU,WACN7I,EDND,SAA2BxB,GAC9B,OAAO,SAACwB,GAEJ8F,MADY3C,EAAOJ,EAAmB,IAAMvE,EACjC,CACPuH,OAAQ,MACRC,QAAS,CACL,eAAgB,oCAGnBC,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EACV,OAAOA,EAASE,UAEnBH,MAAK,SAAAC,GACF5E,QAAQC,IAAI2E,GACZ,IACM0I,EADStK,EAAQ+B,OAAOH,EAAU9C,GACrBsL,gBAAgBlH,UAAUD,SAC7CvH,EAAS,CACLgB,KAAMwN,GACNvN,QAAS2N,OAGhBlI,OAAM,SAAAC,GACHA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YCtBhDoK,CAAkBrQ,MAC5B,IAEHqK,qBAAU,WACNnB,EAAM6C,QACN7C,EAAMoD,WAAW,CACbtM,GAAI+I,EAAS/I,GACbuJ,EAAGR,EAASQ,EACZC,EAAGT,EAASS,EACZxG,KAAM+F,EAAS/F,SAEpB,CAAC+F,IAGA,sBAAMwD,SAAUX,EAAc5L,GAAI,cAAlC,SACI,sBAAKD,UAAW,cAAhB,UACI,0CACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,OAAOR,KAAK,OACjBiK,UAAWjC,GAAoBC,MAAM,qBAE5C,cAAC+B,GAAA,EAAD,CAAOxJ,KAAK,IAAIR,KAAK,SACdiK,UAAWjC,GAAoBC,MAAM,MAE5C,cAAC+B,GAAA,EAAD,CAAOxJ,KAAK,IAAIR,KAAK,SACdiK,UAAWjC,GAAoBC,MAAM,MAE5C,8BACI,wBAAQzK,GAAG,gBAAgB4M,SAAUf,EAArC,8BChBL4D,OAlBf,WACI,IAAOzP,EAAM8M,cAAN9M,GACDwB,EAAWC,wBAOjB,OANmBE,uBAAY,SAAAC,GAAK,OAAIA,EAAMmH,SAASoH,eAAenQ,MAOlE,sBAAKD,UAAU,eAAf,UACI,qDAAwBC,EAAxB,OACA,uBACA,cAAC,GAAD,CAAkBA,GAAIA,EAAIuM,SARjB,SAACQ,GACdvL,EF0ED,SAAwBuH,EAAU/I,GACrC8C,QAAQC,IAAIgG,GACZ,IAAIiE,EAAMlH,EAAQmH,OAXtB,SAAuCzE,GACnC,IAAI/B,EAAS,GAKb,OAJAA,EAAOzG,GAAKwI,EAAKxI,GACjByG,EAAO8C,EAAIf,EAAKe,EAChB9C,EAAO+C,EAAIhB,EAAKgB,EAChB/C,EAAOzD,KAAOwF,EAAKxF,KACZyD,EAKkB6J,CAA8BvH,GAAWnD,GAElE,OADA9C,QAAQC,IAAI,SAAWiK,GAChB,SAACxL,GAEJ8F,MADY3C,kCACD,CACP4C,OAAQ,MACRC,QAAS,CACL,eAAgB,kCAEpB0F,KAAM,yCAA2CF,EAAM,8CAEtDvF,MAAK,SAAAC,GACF,GAAKA,EAASC,GAEP,OAAOD,EAASE,OADnB,MAAMF,KAGbD,MAAK,SAAAC,GACF7H,GAAQ0Q,YAEXrI,OAAM,SAAAC,GACHA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YEpGhDuK,CAAezD,WCmBjBrB,gBAAU,CACrBlD,KAAM,wBADKkD,EA1BY,SAACxC,GACxB,IAAO0C,EAAiD1C,EAAjD0C,aAA+BC,GAAkB3C,EAAnC4C,SAAmC5C,EAAzB6C,MAAyB7C,EAAlB2C,YAAkB3C,EAANlJ,GAGlD,OACI,sBAAMuM,SAAUX,EAAc5L,GAAI,cAAlC,SACI,sBAAKD,UAAW,cAAhB,UACI,0CACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,OAAOR,KAAK,OACjBiK,UAAWjC,GAAoBC,MAAM,qBAE5C,cAAC+B,GAAA,EAAD,CAAOxJ,KAAK,IAAIR,KAAK,SACdiK,UAAWjC,GAAoBC,MAAM,MAE5C,cAAC+B,GAAA,EAAD,CAAOxJ,KAAK,IAAIR,KAAK,SACdiK,UAAWjC,GAAoBC,MAAM,MAE5C,8BACI,wBAAQzK,GAAG,gBAAgB4M,SAAUf,EAArC,8BCAL4E,OAlBf,WAEI,IAAMjP,EAAWC,wBAOjB,OANmBE,uBAAY,SAAAC,GAAK,OAAIA,EAAMmH,SAASoH,eAAenQ,MAOlE,sBAAKD,UAAU,eAAf,UACI,iDACA,uBACA,cAAC,GAAD,CAAoBwM,SARX,SAACQ,GACdvL,EJ2GD,SAAwBqH,EAAa7I,GACxC,IAAIgN,EAAMlH,EAAQmH,OAAOpE,EAAajD,GACtC,OAAO,SAACpE,GAEJ8F,MADY3C,kCACD,CACP4C,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAEpB0F,KAAM,yCAA2CF,EAAM,8CAEtDvF,MAAK,SAAAC,GACF,GAAKA,EAASC,GAEP,OAAOD,EAASE,OADnB,MAAMF,KAGbD,MAAK,SAAAC,GACF7H,GAAQO,KAAK,IACb+M,OAAOpE,SAASqE,QAAO,MAE1BlF,OAAM,SAAAC,GACHA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YIpIhDyK,CAAe3D,WCgEjBrB,gBAAU,CACrBlD,KAAM,mBACNmD,yBAAyB,GAFdD,EAjEQ,SAACxC,GACpB,IAAO0C,EAAiD1C,EAAjD0C,aAA+BC,GAAkB3C,EAAnC4C,SAAmC5C,EAAzB6C,MAAyB7C,EAAlB2C,YAAY7L,EAAMkJ,EAANlJ,GAC5CwB,EAAWC,wBACXqH,EAASnH,uBAAY,SAAAC,GAAK,OAAIA,EAAMkH,OAAO6H,gBAC3CC,EAAejP,uBAAY,SAAAC,GAAK,OAAIA,EAAMmH,SAASoD,iBACnDtM,EAAUC,cA4BhB,OA1BAuK,qBAAU,WACN7I,EhCXD,SAAyBxB,GAC5B,OAAO,SAACwB,GAEJ8F,MADY3C,EAAOF,EAAiB,IAAMzE,EAC/B,CACPuH,OAAQ,MACRC,QAAS,CACL,eAAgB,oCAGnBC,MAAK,SAAAC,GAEF,GADA5E,QAAQC,IAAI,UAAY2E,EAASsC,SAC5BtC,EAASC,GACV,MAAMD,EACV,OAAOA,EAASE,UAEnBH,MAAK,SAAAC,GACF5E,QAAQC,IAAI2E,GACZ,IACMoB,EADShD,EAAQ+B,OAAOH,EAAU9C,GAClByG,cAAcC,WAAWA,WAC/C9J,EAAS,CACLgB,KAAM2I,GACN1I,QAASqG,OAGhBZ,OAAM,SAAAC,GACHA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YgClBhD4K,CAAgB7Q,IACzBwB,EAASyO,QACV,IAEH5F,qBAAU,WACNnB,EAAM6C,QACN7C,EAAMoD,WAAW,CACbtM,GAAI8I,EAAO9I,GACXwL,OAAQ1C,EAAO0C,OACfC,SAAU3C,EAAO2C,SACjBzC,UAAWF,EAAOC,SAAS/I,OAEhC,CAAC8I,EAAQ8H,IAcR,sBAAMrE,SAAUX,EAAc5L,GAAI,cAAlC,SACI,sBAAKD,UAAW,cAAhB,UACI,8CACA,qBAAKA,UAAU,QAAf,2BAEA,sBAAKA,UAAW,cAAhB,UACI,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,YAAYhD,GAAG,YACpByM,UAAU,SAAShC,MAAM,cADhC,SAEKmG,EAAahH,KAAI,SAAA8C,GAAC,OAAI,wBAAmB7J,MAAO6J,EAAE1M,GAA5B,SAAiC0M,EAAE1J,MAAtB0J,EAAE1M,SAE1C,wBAAQA,GAAI,oBAAqBC,QAtBjD,SAAkCC,GAC9BA,EAAIC,iBACJ,IAAIiC,EAAUC,SAASC,eAAe,aACtCzC,EAAQO,KAAK,kBAAoBgC,EAAQS,QAmB7B,kBACA,wBAAQ7C,GAAI,oBAAqBC,QAjBjD,SAAoCC,GAChCA,EAAIC,iBACJN,EAAQO,KAAK,kBAeD,uBAEJ,cAACoM,GAAA,EAAD,CAAOxJ,KAAK,SAASR,KAAK,SACnBiK,UAAWjC,GAAoBC,MAAM,WAG5C,qBAAK1K,UAAU,QAAf,uBACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,WACLyJ,UAAU,SAAShC,MAAM,YADhC,SAEKQ,GAAOrB,KAAI,SAAA8C,GAAC,OAAI,yBAAgB7J,MAAO6J,EAAvB,UAA2BA,EAA3B,MAAaA,QAElC,8BACI,wBAAQ1M,GAAG,gBAAgB4M,SAAUf,EAArC,8BC3CLiF,OAlBf,WACI,IAAO9Q,EAAM8M,cAAN9M,GACDwB,EAAWC,wBACX2H,EAAWzH,uBAAY,SAAAC,GAAK,OAAIA,EAAMoG,QAAQgE,aAAahM,MAMjE,OACI,sBAAKD,UAAU,eAAf,UACI,mDAAsBC,EAAtB,OACA,uBACA,cAAC,GAAD,CAAgBA,GAAIA,EAAIuM,SARf,SAACQ,GACdvL,EjC2ED,SAAsBsH,EAAQ9I,GACjC,IAAIgN,EAAMlH,EAAQmH,OAAO1B,GAA6BzC,GAASlD,GAE/D,OADA9C,QAAQC,IAAI,SAAWiK,GAChB,SAACxL,GAEJ8F,MADY3C,gCACD,CACP4C,OAAQ,MACRC,QAAS,CACL,eAAgB,kCAEpB0F,KAAM,0CAA4CF,EAAM,+CAEvDvF,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EACV7H,GAAQO,KAAK,SAAWJ,GACxBmN,OAAOpE,SAASqE,QAAO,MAE1BlF,OAAM,SAAAC,GACHA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YiClGhD8K,CAAahE,EAAU3D,WCwCzBsC,gBAAU,CACrBlD,KAAM,sBADKkD,EA5CU,SAACxC,GACtB,IAAO0C,EAAiD1C,EAAjD0C,aAA+BC,GAAkB3C,EAAnC4C,SAAmC5C,EAAzB6C,MAAyB7C,EAAlB2C,YAChCrK,GADkD0H,EAANlJ,GACjCyB,yBACXmP,EAAejP,uBAAY,SAAAC,GAAK,OAAIA,EAAMmH,SAASoD,iBAczD,OAZA9B,qBAAU,WACN7I,EAASyO,QACV,IAEH5F,qBAAU,WACNnB,EAAM6C,QACN7C,EAAMoD,WAAW,CACbtD,UAAW4H,EAAa,GAAG5Q,GAC3ByL,SAAUR,GAAO,OAEtB,CAAC2F,IAGA,sBAAMrE,SAAUX,EAAc5L,GAAI,cAAlC,SACI,sBAAKD,UAAW,cAAhB,UACI,wCACA,qBAAKA,UAAU,QAAf,2BACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,YAAYhD,GAAG,YACpByM,UAAU,SAAShC,MAAM,cADhC,SAEKmG,EAAahH,KAAI,SAAA8C,GAAC,OAAI,wBAAmB7J,MAAO6J,EAAE1M,GAA5B,SAAiC0M,EAAE1J,MAAtB0J,EAAE1M,SAE1C,cAACwM,GAAA,EAAD,CAAOxJ,KAAK,SAASR,KAAK,SACnBiK,UAAWjC,GAAoBC,MAAM,kBAG5C,qBAAK1K,UAAU,QAAf,uBACA,cAACyM,GAAA,EAAD,CAAOxJ,KAAK,WACLyJ,UAAU,SAAShC,MAAM,YADhC,SAEKQ,GAAOrB,KAAI,SAAA8C,GAAC,OAAI,yBAAgB7J,MAAO6J,EAAvB,UAA2BA,EAA3B,MAAaA,QAElC,8BACI,wBAAQ1M,GAAG,gBAAgB4M,SAAUf,EAArC,8BCrBLmF,OAlBf,WAEI,IAAMxP,EAAWC,wBAOjB,OANiBE,uBAAY,SAAAC,GAAK,OAAIA,EAAMkH,OAAO6H,aAAa3Q,MAO5D,sBAAKD,UAAU,eAAf,UACI,+CACA,uBACA,cAAC,GAAD,CAAkBwM,SART,SAACQ,GACdvL,EnCyGD,SAAsBsH,EAAQ9I,GACjC,IAAIgN,EAAMlH,EAAQmH,OAAO1B,GAA6BzC,GAASlD,GAE/D,OADA9C,QAAQC,IAAI,MAAQiK,GACb,SAACxL,GAEJ8F,MADY3C,gCACD,CACP4C,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAEpB0F,KAAM,0CAA4CF,EAAM,+CAEvDvF,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EACV7H,GAAQO,KAAK,IACb+M,OAAOpE,SAASqE,QAAO,MAE1BlF,OAAM,SAAAC,GACHA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,YmChIhDgL,CAAalE,WCNjBmE,GAAgB,gBAChBC,GAAmB,mBACnBC,GAAkB,kBAClBC,GAAkB,kBCuChBC,OAzCf,WACI,IAAMzR,EAAUC,cACV0B,EAAWC,wBACX8P,EAAW5P,uBAAY,SAAAC,GAAK,OAAIA,EAAM4P,WAAWD,YAsBvD,OApBAlH,qBAAU,WASN7I,GCdG,SAACA,GAEJ8F,MADY3C,mCACD,CACP4C,OAAQ,MACRC,QAAS,CACL,eAAgB,oCAGnBC,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EACV,OAAOA,EAASE,UAEnBH,MAAK,SAAAC,GACF5E,QAAQC,IAAI2E,GACZ,IAAMjB,EAASX,EAAQ+B,OAAOH,EAAU9C,GACxCpD,EAAS,CACLgB,KAAM0O,GACNzO,QAASgE,EAAOgL,kBAAkBC,YAAYzF,gBAGrD/D,OAAM,SAAAC,GACHrF,QAAQC,IAAIoF,GACZA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,gBDZ1D,IAWC,sBAAKlG,UAAU,cAAf,UACI,mDACA,qBAAKA,UAAW,qBAAhB,SACI,oFAEHwR,GAAYA,EAASnM,OAAS,GAC/BmM,EAAS3H,KAAI,SAAA+H,GAAC,OACV,6BAAKA,EAAEnP,UAGX,wBAAQzC,UAAW,iBAAkBE,QAnB7C,WACIJ,EAAQO,KAAK,IACboB,EAAS,CACLgB,KAAM0O,GACNzO,QAAS,MAeT,gCEnBGmP,OAnBf,WAGI,OAFiBnQ,wBAGb,sBAAK1B,UAAU,oBAAoBC,GAAG,eAAtC,UAEI,qBAAKD,UAAU,SAAf,SACI,wCAEJ,8BACI,0CAEJ,8BACI,kDCFD8R,OAbf,SAAwB3I,GACpB,IAAMJ,EAASI,EAAMJ,OACfgJ,EAAWhJ,EAAO9I,GAExB,OACI,sBAAKD,UAAU,iBAAf,UACI,qBAAKA,UAAU,SAAf,SAAyB+R,IACzB,8BAAMhJ,EAAO9F,OACb,8BAAM8F,EAAOF,eCeVmJ,OAxBf,SAAoB7I,GAChB,IAEIQ,EAFE4B,EAAapC,EAAMoC,WAGzB,YAAmB5C,IAAf4C,EAEI,qBAAKvL,UAAU,wBAAf,SACI,qBAAKA,UAAU,SAAf,yBAIPiS,MAAMC,QAAQ3G,GAIf5B,EAAY4B,EAAW1B,KAAI,SAACd,GAAD,OACvB,cAAC,GAAD,CAAgBA,OAAQA,GAAaA,EAAO9I,QAJhD8C,QAAQC,IAAI,aACZ2G,EAAY,cAAC,GAAD,CAAgBZ,OAAQwC,GAAiBA,EAAWtL,KAOhE,8BAAM0J,MCNCwI,OAXf,WACI,IAAM5G,EAAa3J,uBAAY,SAAAC,GAAK,OAAIA,EAAM4P,WAAWvJ,cAEzD,OACI,sBAAKlI,UAAU,cAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,CAAYuL,WAAYA,QCmErB6G,OAtEf,WACI,IAAMtS,EAAUC,cACV0B,EAAWC,wBAEXwG,EAAatG,uBAAY,SAAAC,GAAK,OAAIA,EAAM4P,WAAWvJ,cACzD,EAA0C5E,mBAAS,IAAnD,mBAAO+O,EAAP,KAAsBC,EAAtB,KA+CA,OA5CAhI,qBAAU,WACN,OAAOxK,EAAQyS,QAAO,SAAAvJ,GACK,QAAnBlJ,EAAQ0S,QACR/Q,EAAS,CACLgB,KAAM4O,GACN3O,QAAS,UAOtB,IAiCC,sBAAK1C,UAAU,cAAf,UACI,+CACA,sBAAKA,UAAW,qBAAhB,UACI,4EACA,uBAAOyC,KAAM,SAAUzC,UAAW,YAAa8C,MAAOuP,EAC/CzO,SApCnB,SAAgCC,GAC5B,IAAIC,EAAQD,EAAME,OAAOjB,MACzBwP,EAAiBxO,IAmCFE,QAhCnB,SAA+BH,GAC3ByO,EAAiB,IACjB7Q,EAAS,CACLgB,KAAM4O,GACN3O,QAAS,MA6BEuB,OAzBnB,SAA8BJ,GAC1B,ILJsBgF,EKIlB/E,EAAQD,EAAME,OAAOjB,MACX,KAAVgB,GAAgBI,OAAOC,UAAUD,OAAOJ,KAAWI,OAAOJ,IAAU,EACpErC,GLNkBoH,EKMK/E,ELL/Bf,QAAQC,IAAI,cAAgB6F,GACrB,SAACpH,GACJ,IAAMgR,EAAM7N,EAAOD,EAAqB,aAAekE,EACvD9F,QAAQC,IAAIyP,GACZlL,MAAMkL,EAAK,CACPjL,OAAQ,MACRC,QAAS,CACL,eAAgB,oCAGnBC,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAMD,EACV,OAAOA,EAASE,UAEnBH,MAAK,SAAAC,GACF5E,QAAQC,IAAI2E,GACZ,IAAMjB,EAASX,EAAQ+B,OAAOH,EAAU9C,GACxC9B,QAAQC,IAAI0D,GACZjF,EAAS,CACLgB,KAAM4O,GACN3O,QAASgE,EAAOsB,cAAcE,WAAWA,gBAGhDC,OAAM,SAAAC,GACHrF,QAAQC,IAAIoF,GACZA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,cKvBrDoM,EAAiB,YAsBdL,MAAMC,QAAQhK,IAAeA,EAAW7C,OAAS,IACpD,cAAC,GAAD,IAEA,wBAAQrF,UAAW,iBAAkBE,QArB7C,WACIuB,EAAS,CACLgB,KAAM4O,GACN3O,QAAS,KAEb5C,EAAQO,KAAK,KAgBT,iCCJGqS,OA5Df,WACI,IAAMjR,EAAWC,wBACX6J,EAAa3J,uBAAY,SAAAC,GAAK,OAAIA,EAAMkH,OAAOsD,eAE/CsG,EAAc/Q,uBAAY,SAAAC,GAAK,OAAIA,EAAM4P,WAAWkB,eACpD7S,EAAUC,cA4BhB,SAAS6S,EAAqB/O,GAC1B,INkCuB5D,EMlCnB6D,EAAQD,EAAME,OAAOjB,MACX,KAAVgB,GACArC,GNgCmBxB,EMhCK6D,ENiCzB,SAACrC,GAEJ8F,MADY3C,EAAOD,EAAqB,WAAa1E,EAC1C,CACPuH,OAAQ,MACRC,QAAS,CACL,eAAgB,oCAGnBC,MAAK,SAAAC,GAEF,GADA5E,QAAQC,IAAI,UAAY2E,EAASsC,SAC5BtC,EAASC,GACV,MAAMD,EACV,OAAOA,EAASE,UAEnBH,MAAK,SAAAC,GACF,IAAMjB,EAASX,EAAQ+B,OAAOH,EAAU9C,GACxCpD,EAAS,CACLgB,KAAM2O,GACN1O,QAASgE,EAAOmM,SAAS9K,WAGhCI,OAAM,SAAAC,GACHrF,QAAQC,IAAIoF,GACZA,EAAMP,OAAOH,MAAK,SAAAW,GACd,IAEMnC,EAFUF,EAAQ,IACD8B,OAAOO,EAAcxD,GACzByD,aAAalC,QAChC3E,EAAS8G,IAAcH,MAAMnC,EAAgBC,cMxD7D,OAjCAoE,qBAAU,WACN7I,EAAS4J,QACV,IAEHf,qBAAU,WACN,OAAOxK,EAAQyS,QAAO,SAAAvJ,GACK,QAAnBlJ,EAAQ0S,QACR/Q,EAAS,CACLgB,KAAM6O,GACN5O,QAAS,UAOtB,IAkBC,sBAAK1C,UAAU,cAAf,UACI,6CACA,sBAAKA,UAAW,qBAAhB,UACI,2EACA,wBAAQA,UAAW,aACX4D,SAAUgP,EACV3O,OAAQ2O,EAFhB,SAGKrH,EAAW1B,KAAI,SAAA8C,GAAC,OAAI,wBAAmB7J,MAAO6J,EAAE1M,GAA5B,SAAiC0M,EAAE1M,IAAtB0M,EAAE1M,YAG3B,KAAhB0S,GACD,sBAAK3S,UAAW,SAAhB,sBAAoC2S,KAGpC,wBAAQ3S,UAAW,iBAAkBE,QA9B7C,WACIJ,EAAQO,KAAK,IACboB,EAAS,CACLgB,KAAM2O,GACN1O,QAAS,MA0BT,iCCnCC5C,GAAUgT,OAqFRC,OAtEf,WACI,IAAMC,EAAgBpR,uBAAY,SAAAC,GAAK,OAAIA,EAAMmR,iBAC3CC,EAAcrR,uBAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKmR,eAC9CxR,EAAWC,wBACXO,EAAmBL,uBAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKI,gBASzD,OACI,sBAAKlC,UAAU,MAAf,UACI,eAAC,GAAD,CAAOqP,OAAQ4D,EAAapQ,UATpC,SAAmBC,GACfrB,EAAS,CACLgB,KAAM,aACNC,QAASI,KAMyC7C,GAAG,QAArD,UACKgC,IAAqB3B,GAAM,cAAC,GAAD,IAC3B2B,IAAqB1B,GAAQ,cAAC,GAAD,IAC7B0B,IAAqBzB,GAAc,cAAC,GAAD,IACnCyB,IAAqBxB,GAAQ,cAAC,GAAD,IAC7BwB,IAAqBvB,GAAY,cAAC,GAAD,IACjCuB,IAAqBtB,GAAS,cAAC,GAAD,IAC9BsB,IAAqBrB,GAAQ,cAAC,GAAD,IAC7BqB,IAAqBpB,GAAU,cAAC,GAAD,OAEpC,cAAC,KAAD,CAAQf,QAASA,GAAjB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOoT,KAAK,YAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,wBAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACI,cAACC,GAAD,MAEJ,cAAC,IAAD,CAAOD,KAAK,mBAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOE,OAAK,EAACF,KAAK,mBAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOE,OAAK,EAACF,KAAK,gBAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOE,OAAK,EAACF,KAAK,cAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOE,OAAK,EAACF,KAAK,mBAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOE,OAAK,EAACF,KAAK,uBAAlB,SACI,cAACG,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACF,KAAK,qBAAlB,SACI,cAACI,GAAD,MAEJ,cAAC,IAAD,CAAOJ,KAAK,OAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOE,OAAK,EAACF,KAAK,GAAlB,SACI,cAAC,GAAD,WAIZ,cAAC,IAAD,CAAeF,cAAeA,Q,6BC3GpCO,GAAe,CACjBrL,WAAY,GACZ+D,aAAc,CACVnD,YAAa,CAAC7I,GAAI,GAAIuJ,EAAG,GAAIC,EAAG,IAChCV,OAAQ,CACJ9I,GAAI,GAAIyL,SAAU,GAAID,OAAQ,GAC9BzC,SAAU,CAAC/I,GAAI,GAAIuJ,EAAG,GAAIvG,KAAM,GAAIwG,EAAG,O,cCK7C8J,GAAe,CACjBpQ,QAAS,GACTC,YAAa,EACbC,UAAW,GACXkH,WAAY,EACZxI,OAAQ,GACRkR,aAAa,EACbjR,QAAS,GACTE,aAAc,I,cCnBZqR,GAAe,CACjBpH,gBAAiB,CAAC,CAAClM,GAAI,GAAIuJ,EAAG,GAAIC,EAAG,KACrC+F,kBAAmB,CAACvP,GAAI,GAAIuJ,EAAG,GAAIC,EAAG,KCF1C,IAAM8J,GAAe,CACjBnH,cAAe,CAAC,CAACnM,GAAI,GAAIuJ,EAAG,GAAIC,EAAG,GAAIxG,KAAM,KAC7CmN,eAAgB,CAACnQ,GAAI,GAAIuJ,EAAG,GAAIC,EAAG,GAAIxG,KAAM,KCFjD,IAAMsQ,GAAe,CACjBlH,YAAa,CAAC,CAACpM,GAAI,GAAIwL,OAAQ,GAAIC,SAAU,GAAI1C,SAAU,KAC3D4H,aAAc,CAAC3Q,GAAI,GAAIwL,OAAQ,GAAIC,SAAU,GAAI1C,SAAU,KCG/D,IAAMuK,GAAe,CAIjBZ,YAAa,GAEbnB,SAAU,GACVtJ,WAAY,GACZqD,WAAY,ICLT,IAAMiI,GAAcC,2BAAgB,CACvCxL,QNEG,WAAsD,IAA/BpG,EAA8B,uDAAtB0R,GAAcf,EAAQ,uCACxD,OAAQA,EAAO/P,MACX,KAAK4B,EAED,OADAtB,QAAQC,IAAIwP,EAAO9P,SACZ,6BACAb,GADP,IAEIqG,WAAYsK,EAAO9P,UAE3B,KAAK4B,EAED,OADAvB,QAAQC,IAAIwP,EAAO9P,SACZ,6BACAb,GADP,IAEIoK,aAAcuG,EAAO9P,UAE7B,QACI,OAAOb,IMhBfmR,cAAeA,UACflR,KLYG,WAAoD,IAA/BD,EAA8B,uDAAtB0R,GAAcf,EAAQ,uCACtD,OAAQA,EAAO/P,MACX,KAAK3B,EACD,OAAO,6BACAe,GADP,IAEIsB,QAASqP,EAAO9P,UAExB,KAAK3B,EACD,OAAO,6BACAc,GADP,IAEIuB,YAAaoP,EAAO9P,UAE5B,KAAK1B,EACD,OAAO,6BACAa,GADP,IAEIK,aAAcsQ,EAAO9P,UAE7B,KAAKzB,EACD,OAAO,6BACAY,GADP,IAEIwB,UAAWmP,EAAO9P,UAE1B,KAAKxB,EACD,OAAO,6BACAW,GADP,IAEI0I,WAAY1I,EAAM0I,WAAa,IAEvC,KAAKpJ,EACD,OAAO,6BACAU,GADP,IAEIE,OAAO,GAAD,oBAAMF,EAAME,QAAZ,CAAoByQ,EAAO9P,YAEzC,KAAKtB,EACD,OAAO,6BACAS,GADP,IAEIE,OAAQF,EAAME,OAAO+E,QAAO,SAAA4M,GAAI,OAAIA,IAASlB,EAAO9P,aAE5D,KAAKrB,EACD,OAAO,6BACAQ,GADP,IAEIoR,YAAaT,EAAO9P,UAE5B,KAAKpB,EACD,OAAO,6BACAO,GADP,IAEIG,QAAQ,GAAD,oBAAMH,EAAMG,SAAZ,CAAqBwQ,EAAO9P,YAE3C,KAAKnB,EACD,OAAO,6BACAM,GADP,IAEIG,QAASH,EAAMG,QAAQ8E,QAAO,SAAA4M,GAAI,OAAIA,EAAKzQ,OAASuP,EAAO9P,aAEnE,QACI,OAAOb,IKhEfiH,YJPG,WAA2D,IAA/BjH,EAA8B,uDAAtB0R,GAAcf,EAAQ,uCAC7D,OAAQA,EAAO/P,MACX,KAAKqH,EAED,OADA/G,QAAQC,IAAIwP,EAAO9P,SACZ,6BACAb,GADP,IAEIsK,gBAAiBqG,EAAO9P,UAEhC,KAAKqH,EAED,OADAhH,QAAQC,IAAIwP,EAAO9P,SACZ,6BACAb,GADP,IAEI2N,kBAAmBgD,EAAO9P,UAElC,QACI,OAAOb,IIPfmH,SHRG,WAAwD,IAA/BnH,EAA8B,uDAAtB0R,GAAcf,EAAQ,uCAC1D,OAAQA,EAAO/P,MACX,KAAKuN,GAED,OADAjN,QAAQC,IAAIwP,EAAO9P,SACZ,6BACAb,GADP,IAEIuK,cAAeoG,EAAO9P,UAE9B,KAAKuN,GAED,OADAlN,QAAQC,IAAIwP,EAAO9P,SACZ,6BACAb,GADP,IAEIuO,eAAgBoC,EAAO9P,UAE/B,QACI,OAAOb,IGNfkH,OFTG,WAAsD,IAA/BlH,EAA8B,uDAAtB0R,GAAcf,EAAQ,uCACxD,OAAQA,EAAO/P,MACX,KAAK0I,GACD,OAAO,6BACAtJ,GADP,IAEIwK,YAAamG,EAAO9P,UAE5B,KAAK0I,GACD,OAAO,6BACAvJ,GADP,IAEI+O,aAAc4B,EAAO9P,UAE7B,QACI,OAAOb,IEHf4P,WDCG,WAA+D,IAA/B5P,EAA8B,uDAAtB0R,GAAcf,EAAQ,uCACjE,OAAQA,EAAO/P,MACX,KAAK0O,GACD,OAAO,6BACAtP,GADP,IAEI2P,SAAUgB,EAAO9P,UAEzB,KAAK0O,GACD,OAAO,6BACAvP,GADP,IAEI8Q,YAAaH,EAAO9P,UAE5B,KAAK2O,GACD,OAAO,6BACAxP,GADP,IAEIqG,WAAYsK,EAAO9P,UAE3B,KAAK4O,GACD,OAAO,6BACAzP,GADP,IAEI0J,WAAYiH,EAAO9P,UAgC3B,QACI,OAAOb,ICrDf4G,KAAMkL,O,yCCRGC,GAAQC,uBACjBL,GACAM,+BAAoBC,2BAAgBC,KAAOC,QAI/CC,KAASC,OACL,cAAC,WAAD,CAAUP,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJtR,SAASC,eAAe,U","file":"static/js/main.c2f1eca0.chunk.js","sourcesContent":["import '../../css/filter-header.css';\r\nimport '../../css/app.css';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction AdditionalTasksHeader() {\r\n    const history = useHistory();\r\n\r\n    function handleDiscountClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/additional/discount\");\r\n    }\r\n\r\n    function handleTypeClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/additional/type\");\r\n    }\r\n\r\n    function handlePersonClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/additional/person\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"filter-header base\">\r\n            <div className={\"tasks-div\"}>\r\n                <button id=\"new-ticket-but\" onClick={handleTypeClick}>\r\n                    TYPES TASK\r\n                </button>\r\n                <button id=\"new-ticket-but\" onClick={handleDiscountClick}>\r\n                    DISCOUNT TASK\r\n                </button>\r\n                <button id=\"new-ticket-but\" onClick={handlePersonClick}>\r\n                    PERSON TASK\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdditionalTasksHeader;\r\n","const ID = \"id\";\r\nconst NAME = \"name\";\r\nconst COORDINATE = \"coordinate\";\r\nconst DATE = \"date\";\r\nconst DISCOUNT = \"discount\";\r\nconst PRICE = \"price\";\r\nconst TYPE = \"type\";\r\nconst PERSON = \"person\";\r\nconst EDIT_COORD = \"editCoord\";\r\nexport {ID, NAME, COORDINATE, DATE, DISCOUNT, PRICE, TYPE, PERSON, EDIT_COORD};","export const SET_PER_PAGE = 'SET_PER_PAGE';\r\nexport const SET_CUR_PAGE = 'SET_CUR_PAGE';\r\nexport const SET_CUR_CRITERION = 'SET_CUR_CRITERION';\r\nexport const SET_ITEM_COUNT = 'SET_ITEM_COUNT';\r\nexport const DELETE_TICKET = 'DELETE_TICKET';\r\nexport const SET_SORT = 'SET_SORT';\r\nexport const REMOVE_SORT = 'REMOVE_SORT';\r\nexport const SHOW_MODAL = 'SHOW_MODAL';\r\nexport const SET_FILTER = 'SET_FILTER';\r\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\r\n","import '../../css/table-header.css';\r\nimport '../../css/app.css';\r\nimport {FaFilter, FaSortAmountDown} from 'react-icons/fa';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {COORDINATE, DATE, PRICE, TYPE, ID, NAME, DISCOUNT, PERSON} from '../../constants/filterConstants';\r\nimport {REMOVE_FILTER, REMOVE_SORT, SET_CUR_CRITERION, SET_SORT, SHOW_MODAL} from \"../../constants/pageActionsConsts\";\r\n\r\n\r\nfunction TableHeader() {\r\n    const dispatch = useDispatch();\r\n    const sort = useSelector(state => state.page.sortBy);\r\n    const filters = useSelector(state => state.page.filters);\r\n    const currentCriterion = useSelector(state => state.page.curCriterion);\r\n\r\n    function sortHandler(criterion) {\r\n        let element = document.getElementById(\"sort-\" + criterion);\r\n        if (!sort.includes(criterion)) {\r\n            dispatch({\r\n                type: SET_SORT,\r\n                payload: criterion\r\n            });\r\n            element.style.color = \"rgb(255,255,255)\";\r\n        } else {\r\n            dispatch({\r\n                type: REMOVE_SORT,\r\n                payload: criterion\r\n            });\r\n            element.style.color = \"rgba(255,255,255,0.5)\";\r\n        }\r\n    }\r\n\r\n    function setActive(value, criterion) {\r\n        console.log(\"CUR = \" + currentCriterion);\r\n        let element = document.getElementById(\"filter-\" + criterion);\r\n        for (const filter of filters) {\r\n            if (filter.name === criterion) {\r\n                dispatch({\r\n                    type: REMOVE_FILTER,\r\n                    payload: criterion\r\n                });\r\n                element.style.color = \"rgba(255,255,255,0.5)\";\r\n                return;\r\n            }\r\n        }\r\n        if (value) {\r\n            dispatch({\r\n                type: SET_CUR_CRITERION,\r\n                payload: criterion\r\n            });\r\n        }\r\n        dispatch({\r\n            type: SHOW_MODAL,\r\n            payload: value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"table-header base\" id=\"table-header\">\r\n\r\n            <div className=\"id-div\">\r\n                <span>Id</span>\r\n                <FaSortAmountDown color=\"rgba(255,255,255,0.5)\" className=\"pointer\" id=\"sort-id\"\r\n                                  onClick={() => sortHandler(ID)}/>\r\n                <FaFilter color=\"rgba(255,255,255,0.5)\" className=\"pointer\" id=\"filter-id\"\r\n                          onClick={() => setActive(true, ID)}/>\r\n            </div>\r\n            <div>\r\n                <span>Name</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-name\"\r\n                                  onClick={() => sortHandler(NAME)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-name\"\r\n                          onClick={() => setActive(true, NAME)}/>\r\n            </div>\r\n            <div>\r\n                <span>Coordinates</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-coordinate\"\r\n                                  onClick={() => sortHandler(COORDINATE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-coordinate\"\r\n                          onClick={() => setActive(true, COORDINATE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Creation Date</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-date\"\r\n                                  onClick={() => sortHandler(DATE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-date\"\r\n                          onClick={() => setActive(true, DATE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Discount</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-discount\"\r\n                                  onClick={() => sortHandler(DISCOUNT)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-discount\"\r\n                          onClick={() => setActive(true, DISCOUNT)}/>\r\n            </div>\r\n            <div>\r\n                <span>Price</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-price\"\r\n                                  onClick={() => sortHandler(PRICE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-price\"\r\n                          onClick={() => setActive(true, PRICE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Type</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-type\"\r\n                                  onClick={() => sortHandler(TYPE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-type\"\r\n                          onClick={() => setActive(true, TYPE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Person id</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-person\"\r\n                                  onClick={() => sortHandler(PERSON)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-person\"\r\n                          onClick={() => setActive(true, PERSON)}/>\r\n            </div>\r\n            <div>\r\n                <span>Action</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableHeader;\r\n","import '../../css/page-footer.css';\r\nimport '../../css/app.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SET_CUR_PAGE, SET_PER_PAGE} from \"../../constants/pageActionsConsts\";\r\nimport {BsPlusCircleFill, IoMdArrowRoundBack, IoMdArrowRoundForward} from \"react-icons/all\";\r\n\r\nfunction PageFooter() {\r\n    const perPage = useSelector(state => state.page.perPage);\r\n    const currentPage = useSelector(state => state.page.currentPage);\r\n    const itemCount = useSelector(state => state.page.itemCount);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [localPerPage, setLocalPerPage] = useState(\"10\");\r\n    const [localCurPage, setLocalCurPage] = useState(\"1\");\r\n\r\n    function handleOnChangePerPage(event) {\r\n        let input = event.target.value;\r\n        setLocalPerPage(input);\r\n    }\r\n\r\n    function handleOnFocusPerPage(event) {\r\n        setLocalPerPage(\"\");\r\n    }\r\n\r\n    function handleOnBlurPerPage(event) {\r\n        let input = event.target.value;\r\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0)\r\n            dispatch({\r\n                type: SET_PER_PAGE,\r\n                payload: input\r\n            });\r\n        else {\r\n            setLocalPerPage(\"10\")\r\n            dispatch({\r\n                type: SET_PER_PAGE,\r\n                payload: 10\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleOnChangeCurPage(event) {\r\n        let input = event.target.value;\r\n        setLocalCurPage(input);\r\n    }\r\n\r\n    function handleOnFocusCurPage(event) {\r\n        setLocalCurPage(\"\");\r\n    }\r\n\r\n    function handleOnBlurCurPage(event) {\r\n        let input = event.target.value;\r\n        dispatch({\r\n            type: SET_CUR_PAGE,\r\n            payload: input\r\n        });\r\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0)\r\n            dispatch({\r\n                type: SET_CUR_PAGE,\r\n                payload: input\r\n            });\r\n        else {\r\n            setLocalCurPage(\"1\")\r\n            dispatch({\r\n                type: SET_CUR_PAGE,\r\n                payload: 1\r\n            });\r\n        }\r\n    }\r\n\r\n    function createHandler() {\r\n        history.push(\"/new\");\r\n    }\r\n\r\n    function changePage(value) {\r\n        if (value > 0 && ((value - 1) * perPage - itemCount) < 0) {\r\n            setLocalCurPage(value);\r\n            dispatch({\r\n                type: SET_CUR_PAGE,\r\n                payload: value\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"footer base\">\r\n            <button id=\"new-ticket-but\" onClick={() => createHandler()}>\r\n                <div className={\"icon-but\"}>\r\n                    <div className={\"icon\"}>\r\n                        <BsPlusCircleFill color={\"#4683de\"}/>\r\n                    </div>\r\n                    ADD TICKET\r\n                </div>\r\n            </button>\r\n            <div className=\"page-footer\">\r\n                <span>Per Page</span>\r\n                <input id=\"current-num\" value={localPerPage} onChange={handleOnChangePerPage}\r\n                       onFocus={handleOnFocusPerPage} onBlur={handleOnBlurPerPage}/>\r\n                <span>Total</span>\r\n                <input id=\"current-page\" value={itemCount} contentEditable={\"false\"}/>\r\n                <div id={\"left-arrow\"}>\r\n                    <IoMdArrowRoundBack className=\"pointer\" color=\"rgb(70,131,222)\"\r\n                                        onClick={() => changePage(currentPage - 1)}/>\r\n                </div>\r\n                <input id=\"current-page\" value={localCurPage} onChange={handleOnChangeCurPage}\r\n                       onFocus={handleOnFocusCurPage} onBlur={handleOnBlurCurPage}/>\r\n                <div id={\"right-arrow\"}>\r\n                    <IoMdArrowRoundForward className=\"pointer\" color=\"rgb(70,131,222)\"\r\n                                           onClick={() => changePage(currentPage + 1)}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PageFooter;\r\n","export const SET_TICKETS = 'SET_TICKETS';\r\nexport const SET_EDITED_TICKET = 'SET_EDITED_TICKET';\r\nexport const SET_PERSON_EDITED_TICKET = 'SET_PERSON_EDITED_TICKET';\r\n","export const TICKET_SERVLET = \"tickets\"\r\nexport const LOCATION_SERVLET = \"locations\"\r\nexport const COORD_SERVLET = \"coordinates\"\r\nexport const PERSON_SERVLET = \"persons\"\r\nexport const ADDITIONAL_SERVLET = \"additional\"\r\nexport const BASE = \"http://localhost:8081/\"\r\n//export const HEADER = 'Content-Type': 'application/xml; charset=utf-8'\r\n//export const BASE = \"/\";","export function nativeType(value) {\r\n    var nValue = Number(value);\r\n    if (!isNaN(nValue)) {\r\n        return nValue;\r\n    }\r\n    var bValue = value.toLowerCase();\r\n    if (bValue === 'true') {\r\n        return true;\r\n    } else if (bValue === 'false') {\r\n        return false;\r\n    }\r\n    return value;\r\n}\r\n\r\nexport var removeJsonTextAttribute = function (value, parentElement) {\r\n    try {\r\n        var keyNo = Object.keys(parentElement._parent).length;\r\n        var keyName = Object.keys(parentElement._parent)[keyNo - 1];\r\n        parentElement._parent[keyName] = nativeType(value);\r\n    } catch (e) {\r\n    }\r\n}\r\n\r\nexport let options = {\r\n    compact: true,\r\n    /*trim: true,\r\n    ignoreDeclaration: true,\r\n    ignoreInstruction: true,\r\n    ignoreAttributes: true,\r\n    ignoreComment: true,\r\n    ignoreCdata: true,\r\n    ignoreDoctype: true,*/\r\n    textFn: removeJsonTextAttribute\r\n};\r\n\r\nexport let options1 = {\r\n    compact: true,\r\n    fullTagEmptyElement: true\r\n};\r\n\r\nexport const convert = require('xml-js');","export const serverException = (msg) => {\r\n    let exception = {};\r\n    exception.title = \"Произошла ошибка\";\r\n    exception.message = msg;\r\n    exception.position = \"tr\";\r\n    exception.autoDismiss = 3;\r\n    return exception;\r\n}\r\n","import {history} from '../components/App.js';\r\nimport {DELETE_TICKET, SET_ITEM_COUNT} from \"../constants/pageActionsConsts\";\r\nimport {SET_EDITED_TICKET, SET_TICKETS} from \"../constants/ticketActionsConsts\";\r\nimport {COORDINATE, DATE, PRICE, TYPE, ID, NAME, DISCOUNT, PERSON} from \"../constants/filterConstants\";\r\nimport {BASE, TICKET_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport Notifications from 'react-notification-system-redux';\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nfunction parseSortByParameter(criteria) {\r\n    if (criteria.length === 0) {\r\n        return \"\";\r\n    }\r\n    let result = \"&sortBy=\";\r\n    for (const criterion of criteria) {\r\n        result = result + criterion + \";\";\r\n    }\r\n    return result.substring(0, result.length - 1);\r\n}\r\n\r\nfunction parseFilters(filters) {\r\n    if (filters.length === 0) {\r\n        return \"\";\r\n    }\r\n    let result = \"&filterBy=\";\r\n    for (const filter of filters) {\r\n        switch (filter.name) {\r\n            case ID:\r\n                result = result + ID + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case NAME:\r\n                result = result + NAME + \",\" + filter.like + \";\"\r\n                break;\r\n            case DISCOUNT:\r\n                result = result + DISCOUNT + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case PRICE:\r\n                result = result + PRICE + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case TYPE:\r\n                result = result + TYPE + \",\" + filter.like + \";\"\r\n                break;\r\n            case DATE:\r\n                result = result + DATE + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case PERSON:\r\n                result = result + PERSON + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case COORDINATE:\r\n                result = result + COORDINATE + \",\" + filter.xfrom + \",\" + filter.xto + \",\" + filter.yfrom + \",\" + filter.yto + \";\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return result.substring(0, result.length - 1);\r\n}\r\n\r\nexport function getTickets(page) {\r\n    let perPage = page.perPage;\r\n    let curPage = page.currentPage;\r\n    let sortBy = parseSortByParameter(page.sortBy);\r\n    let filterBy = parseFilters(page.filters)\r\n    return (dispatch) => {\r\n        const url = BASE + TICKET_SERVLET +\r\n            \"?perPage=\" + perPage + \"\" +\r\n            \"&curPage=\" + curPage +\r\n            sortBy +\r\n            filterBy;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else return response.text();\r\n            })\r\n            .then(response => {\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const count = result.ticketDTOList.count;\r\n                const tickets = result.ticketDTOList.ticketList.ticketList;\r\n                dispatch({\r\n                    type: SET_TICKETS,\r\n                    payload: tickets\r\n                });\r\n                dispatch({\r\n                    type: SET_ITEM_COUNT,\r\n                    payload: count\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                error.text()\r\n                    .then(errorMessage => {\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport function deleteTicket(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + TICKET_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                else {\r\n                    dispatch({type: DELETE_TICKET});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                error.text()\r\n                    .then(errorMessage => {\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n            });\r\n    }\r\n}\r\n\r\nexport function updateTicket(ticket) {\r\n    let xml = convert.js2xml(transferFormDataToTicketDTO(ticket), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + TICKET_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<ticketDTOList><ticketList><ticketList>\" + xml + \"</ticketList></ticketList></ticketDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"\");\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text()\r\n                    .then(errorMessage => {\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n            });\r\n    }\r\n}\r\n\r\nfunction transferFormDataToTicketDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.name = form.name;\r\n    result.creationDate = form.creationDate;\r\n    if (form.price !== undefined)\r\n        result.price = form.price;\r\n    result.type = form.type;\r\n    result.discount = form.discount;\r\n    result.coordinates = {};\r\n    result.coordinates.id = form.coordinates;\r\n    result.person = {};\r\n    result.person.id = form.person;\r\n    result.person.location = {};\r\n    result.person.location.id = form.locations;\r\n    return result;\r\n}\r\n\r\nexport function createTicket(ticket) {\r\n    let xml = convert.js2xml(transferFormDataToTicketDTO(ticket), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + TICKET_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<ticketDTOList><ticketList><ticketList>\" + xml + \"</ticketList></ticketList></ticketDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else {\r\n                    history.push(\"\");\r\n                    window.location.reload(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getSingleTicket(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + TICKET_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response)\r\n                const result = convert.xml2js(response, options);\r\n                const ticket = result.ticketDTOList.ticketList.ticketList;\r\n                dispatch({\r\n                    type: SET_EDITED_TICKET,\r\n                    payload: ticket\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n\r\n","import '../../css/table-row.css';\r\nimport '../../css/app.css';\r\nimport {FaEdit, FaTrashAlt} from 'react-icons/fa';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteTicket} from \"../../actions/ticketActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction TableRow(props) {\r\n    const ticket = props.ticket;\r\n    const ticketId = ticket.id;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    function deleteHandler(id) {\r\n        dispatch(deleteTicket(id));\r\n    }\r\n\r\n    function editHandler(id) {\r\n        history.push(\"/edit/\" + id);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"table-row base\">\r\n            <div className=\"id-div\">{ticketId}</div>\r\n            <div>{ticket.name}</div>\r\n            <div>({ticket.coordinates.x} ; {ticket.coordinates.y})</div>\r\n            <div>{ticket.creationDate}</div>\r\n            <div>{ticket.discount}</div>\r\n            <div>{ticket.price}</div>\r\n            <div>{ticket.type.toLowerCase()}</div>\r\n            <div>{ticket.person === undefined ? \"null\" : ticket.person.id}</div>\r\n            <div className=\"action-div\">\r\n                <div onClick={() => editHandler(ticketId)}>\r\n                    <FaEdit color=\"#3DC937FF\" className=\"pointer icon\"/>\r\n                </div>\r\n                <div onClick={() => deleteHandler(ticketId)}>\r\n                    <FaTrashAlt className=\"pointer icon\" color=\"#EB6767FF\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableRow;\r\n","import TableRow from \"./TableRow\";\r\n\r\nfunction TicketList(props) {\r\n    const numbers = props.tickets;\r\n    let listItems;\r\n    if (numbers === undefined) {\r\n        return (\r\n            <div className=\"table-row base id-div\">\r\n                <div className=\"id-div\">No data.</div>\r\n            </div>\r\n        );\r\n    }\r\n    if (numbers.coordinates) {//(!Array.isArray(numbers)) {\r\n        //const movie = numbers[0];\r\n        listItems = <TableRow ticket={numbers} key={numbers.id}/>\r\n    } else if (numbers.length > 0){\r\n        listItems = numbers.map((ticket) =>\r\n            <TableRow ticket={ticket} key={ticket.id}/>\r\n        );\r\n    }\r\n    return (\r\n        <div> {listItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TicketList;","export const SET_COORDINATES = \"SET_COORDINATES\";\r\nexport const SET_EDITED_COORDINATES = \"SET_EDITED_COORDINATES\";","import {SET_COORDINATES, SET_EDITED_COORDINATES} from \"../constants/coordinatesActionsConsts\";\r\nimport {history} from \"../components/App\";\r\nimport {BASE, COORD_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nexport function getSingleCoordinates(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                const coordinate = result.coordinatesDTOList.coordinates.coordinate;\r\n                dispatch({\r\n                    type: SET_EDITED_COORDINATES,\r\n                    payload: coordinate\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getCoordinates() {\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(\"RESPONSE = \" + response);\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const coordinates = result.coordinatesDTOList.coordinates.coordinate;\r\n                dispatch({\r\n                    type: SET_COORDINATES,\r\n                    payload: coordinates\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nfunction transferFormDataToCoordinatesDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.x = form.x;\r\n    result.y = form.y;\r\n    return result;\r\n}\r\n\r\nexport function updateCoordinates(coordinates, id) {\r\n    let xml = convert.js2xml(transferFormDataToCoordinatesDTO(coordinates), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<coordinatesDTOList><coordinates><coordinate>\" + xml + \"</coordinate></coordinates></coordinatesDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function createCoordinates(coordinates, id) {\r\n    let xml = convert.js2xml(coordinates, options1);\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<coordinatesDTOList><coordinates><coordinate>\" + xml + \"</coordinate></coordinates></coordinatesDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"\");\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}","import {useHistory} from \"react-router-dom\";\r\n\r\nfunction LinksForAdding() {\r\n    const history = useHistory();\r\n\r\n    function addNewPersonClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/person/new\");\r\n    }\r\n\r\n    function addNewLocationClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/location/new\");\r\n    }\r\n\r\n    function addNewCoordinatesClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/coordinates/new\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"filter-header base\">\r\n            <div className={\"tasks-div\"}>\r\n                <button id=\"new-ticket-but\" onClick={addNewLocationClick}>\r\n                    ADD LOCATION\r\n                </button>\r\n                <button id=\"new-ticket-but\" onClick={addNewPersonClick}>\r\n                    ADD PERSON\r\n                </button>\r\n                <button id=\"new-ticket-but\" onClick={addNewCoordinatesClick}>\r\n                    ADD COORDINATES\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LinksForAdding;\r\n","import '../../css/movie-table.css';\r\nimport AdditionalTasksHeader from \"./AdditionalTasksHeader\";\r\nimport TableHeader from \"./TableHeader\";\r\nimport PageFooter from \"./PageFooter\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getTickets} from \"../../actions/ticketActions\";\r\nimport TicketList from \"./TicketList\";\r\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\r\nimport LinksForAdding from \"./LinksForAdding\";\r\n\r\nfunction TicketTable() {\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.page);\r\n    const tickets = useSelector(state => state.tickets.ticketList);\r\n\r\n\r\n    useEffect(() => {\r\n        //dispatch(getMovies(page.perPage, page.currentPage));\r\n        dispatch(getTickets(page));\r\n        dispatch(getCoordinates());\r\n    }, [page.currentPage, page.perPage, page.deleteItem, page.sortBy, page.filters]);\r\n\r\n\r\n    return (\r\n        <div className=\"movie-table\">\r\n            <LinksForAdding/>\r\n            <AdditionalTasksHeader/>\r\n            <TableHeader/>\r\n            <TicketList tickets={tickets}/>\r\n            <PageFooter/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TicketTable;","import '../../css/table-layout.css';\r\nimport TicketTable from \"./TicketTable\";\r\n\r\nfunction TablePage() {\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h1>Ticket Table</h1>\r\n            <TicketTable/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TablePage;\r\n","import React from \"react\";\r\n\r\nexport const renderedInputField = ({input, label, readonly, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"input-box\">\r\n        <div className=\"label\">{label}</div>\r\n        <input {...input} placeholder={label} type={type} readOnly={readonly}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n        {touched && ((error && <span className=\"error\">{error}</span>) || (warning &&\r\n            <span className=\"error\">{warning}</span>))}\r\n    </div>\r\n)","//export const genres = [\"\", \"DRAMA\", \"TRAGEDY\", \"HORROR\", \"FANTASY\"];\r\nexport const types = [\"\", \"VIP\", \"USUAL\", \"BUDGETARY\", \"CHEAP\"];\r\nexport const colors = [\"GREEN\", \"RED\", \"YELLOW\"];\r\n//export const add_genres = [\"DRAMA\", \"TRAGEDY\", \"HORROR\", \"FANTASY\"];\r\nexport const add_types = [\"VIP\", \"USUAL\", \"BUDGETARY\", \"CHEAP\"];","export const SET_PERSONS = \"SET_PERSONS\";\r\nexport const SET_EDITED_PERSON = \"SET_EDITED_PERSON\";","import {history} from \"../components/App\";\r\nimport {BASE, PERSON_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport {SET_EDITED_PERSON, SET_PERSONS} from \"../constants/personActionsConsts\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nexport function getSinglePerson(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status);\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                const person = result.personDTOList.personList.personList;\r\n                dispatch({\r\n                    type: SET_EDITED_PERSON,\r\n                    payload: person\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getPerson() {\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(\"RESPONSE = \" + response);\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const person = result.personDTOList.personList.personList;\r\n                dispatch({\r\n                    type: SET_PERSONS,\r\n                    payload: person\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nfunction transferFormDataToPersonsDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.height = form.height;\r\n    result.eyeColor = form.eyeColor;\r\n    result.location = {};\r\n    result.location.id = form.locations;\r\n    return result;\r\n}\r\n\r\nexport function updatePerson(person, id) {\r\n    let xml = convert.js2xml(transferFormDataToPersonsDTO(person), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<personDTOList><personList><personList>\" + xml + \"</personList></personList></personDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function createPerson(person, id) {\r\n    let xml = convert.js2xml(transferFormDataToPersonsDTO(person), options1);\r\n    console.log(\"XML\" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<personDTOList><personList><personList>\" + xml + \"</personList></personList></personDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"\");\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSingleTicket} from \"../../actions/ticketActions\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {types} from \"../../constants/enumConstants\";\r\nimport {required} from \"../../validators/required\";\r\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getPerson} from \"../../actions/personsActions\";\r\n\r\nconst TicketEditForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const ticketId = useSelector(state => state.tickets.editedTicket.id);\r\n    const name = useSelector(state => state.tickets.editedTicket.name);\r\n    const discount = useSelector(state => state.tickets.editedTicket.discount);\r\n    const price = useSelector(state => state.tickets.editedTicket.price);\r\n    const creationDate = useSelector(state => state.tickets.editedTicket.creationDate);\r\n    const ticketType = useSelector(state => state.tickets.editedTicket.type);\r\n    const coordinates = useSelector(state => state.tickets.editedTicket.coordinates);\r\n    //const coordinatesId = useSelector(state => state.movies.editedTicket.coordinates.id);\r\n    const person = useSelector(state => state.tickets.editedTicket.person);\r\n    // const location = useSelector(state => state.tickets.editedTicket.screenWriter.location);\r\n    const coordinatesList = useSelector(state => state.coordinates.coordinatesList);\r\n    const locationList = useSelector(state => state.location.locationsList);\r\n    const personList = useSelector(state => state.person.personsList);\r\n    const history = useHistory();\r\n    //const selectedCoordinates = useSelector(state => state.form.edit-ticket-form.values.coordinates)\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleTicket(id));\r\n        dispatch(getCoordinates());\r\n        //dispatch(getLocations());\r\n        dispatch(getPerson());\r\n    }, []);\r\n\r\n    function handleEditCoordSubmit(evt) {\r\n        evt.preventDefault();\r\n        let element = document.getElementById(\"coordinates\");\r\n        history.push(\"/coordinates/edit/\" + element.value);\r\n    }\r\n\r\n    function handleCreateCoordSubmit(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/coordinates/new\");\r\n    }\r\n\r\n    function handleEditPersonSubmit(evt) {\r\n        evt.preventDefault();\r\n        let element = document.getElementById(\"person\");\r\n        history.push(\"/person/edit/\" + element.value);\r\n    }\r\n\r\n    function handleCreatePersonSubmit(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/person/new\");\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            name: name,\r\n            id: ticketId,\r\n            discount: discount,\r\n            price: price,\r\n            creationDate: creationDate,\r\n            type: ticketType,\r\n            coordinates: coordinates.id,\r\n            person: person.id,\r\n        });\r\n    }, [id, name, discount, price, ticketType, coordinates, person])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Ticket</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"discount\" type=\"number\"\r\n                       component={renderedInputField} label=\"Discount\"\r\n                    /*  validate={[required]}*/\r\n                />\r\n                <Field name=\"price\" type=\"number\"\r\n                       component={renderedInputField} label=\"Price\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <Field name=\"creationDate\" type=\"text\"\r\n                       component={renderedInputField} label=\"Creation date\"\r\n                       readonly=\"readonly\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Type</div>\r\n                <Field name=\"type\"\r\n                       component=\"select\" label=\"Type\">\r\n                    {types.map(o => <option key={o} value={o} selected={ticketType === o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Coordinates</h3>\r\n                <div className=\"label\">(X , Y)</div>\r\n                <Field name=\"coordinates\" id=\"coordinates\"\r\n                       component=\"select\" label=\"Coordinates\">\r\n                    {coordinatesList.map(o => <option key={o.id} value={o.id}>({o.x} , {o.y}) </option>)}\r\n                </Field>\r\n                <div className={\"buttons-div\"}>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleEditCoordSubmit}>Edit</button>\r\n                    </div>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleCreateCoordSubmit}>Create</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Person</h3>\r\n                <div className=\"label\">Person's id</div>\r\n                <Field name=\"person\" id=\"person\"\r\n                       component=\"select\">\r\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.id}</option>)}\r\n                </Field>\r\n                <div className={\"buttons-div\"}>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleEditPersonSubmit}>Edit</button>\r\n                    </div>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleCreatePersonSubmit}>Create</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-ticket-form',\r\n    keepDirtyOnReinitialize: true\r\n})(TicketEditForm)","import '../../css/table-layout.css';\r\nimport TicketEditForm from \"../editForms/TicketEditForm\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateTicket} from \"../../actions/ticketActions\";\r\n\r\n\r\nfunction TicketEditPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updateTicket(formData));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit ticket (ID: {id})</h2>\r\n            <hr/>\r\n            <TicketEditForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TicketEditPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {types} from \"../../constants/enumConstants\";\r\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\r\nimport {getPerson} from \"../../actions/personsActions\";\r\n\r\nconst CreateTicketForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const ticketType = useSelector(state => state.tickets.editedTicket.type);\r\n    const coordinatesList = useSelector(state => state.coordinates.coordinatesList);\r\n    const personList = useSelector(state => state.person.personsList);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCoordinates());\r\n        dispatch(getPerson());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            type: types[0],\r\n            coordinates: coordinatesList[0].id,\r\n            person: personList[0].id\r\n        });\r\n    }, [coordinatesList, personList])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Ticket</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"discount\" type=\"number\"\r\n                       component={renderedInputField} label=\"Discount\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"price\" type=\"number\"\r\n                       component={renderedInputField} label=\"Price\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Type</div>\r\n                <Field name=\"type\"\r\n                       component=\"select\" label=\"Type\">\r\n                    {types.map(o => <option key={o} value={o} selected={ticketType === o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Coordinates</h3>\r\n                <div className=\"label\">(X , Y)</div>\r\n                <Field name=\"coordinates\" id=\"coordinates\"\r\n                       component=\"select\" label=\"Coordinates\">\r\n                    {coordinatesList.map(o => <option key={o.id} value={o.id}>({o.x} , {o.y}) </option>)}\r\n                </Field>\r\n            </div>\r\n\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Person</h3>\r\n                <div className=\"label\">Person's id</div>\r\n                <Field name=\"person\" id=\"person\"\r\n                       component=\"select\">\r\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.id}</option>)}\r\n                </Field>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-ticket-form',\r\n})(CreateTicketForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {createTicket} from \"../../actions/ticketActions\";\r\nimport CreateTicketForm from \"../createForms/CreateTicketForm\";\r\n\r\n\r\nfunction CreateTicketPage() {\r\n    /*const history = useHistory();*/\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createTicket(formData));\r\n        /* history.push('/');*/\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h1>Create ticket</h1>\r\n            <CreateTicketForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateTicketPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('id-filter-form'));\r\n\r\n\r\nconst IdFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with id in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'id-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(IdFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport IdFilterForm from \"../filterForms/IdFilterForm\";\r\n\r\n\r\nfunction IdFilterPage() {\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(state => state.page.filters);\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-id\");\r\n        for (const filter of filters) {\r\n            if (filter.name === \"id\") {\r\n                dispatch({\r\n                    type: 'REMOVE_FILTER',\r\n                    payload: \"id\"\r\n                });\r\n            }\r\n        }\r\n        let filter = {};\r\n        filter.name = \"id\";\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <IdFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IdFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst textField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"text-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('name-filter-form'));\r\n\r\n\r\nconst NameFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with title like</h3>\r\n            <div className=\"text-box-container\">\r\n                <Field name=\"like\" type=\"text\"\r\n                       component={textField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'name-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(NameFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport NameFilterForm from \"../filterForms/NameFilterForm\";\r\nimport {SET_FILTER, SHOW_MODAL} from \"../../constants/pageActionsConsts\";\r\n\r\n\r\nfunction NameFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-name\");\r\n        let filter = {};\r\n        filter.name = \"name\";\r\n        filter.like = formData.like;\r\n        dispatch({\r\n            type: SET_FILTER,\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: SHOW_MODAL,\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <NameFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NameFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('coordinate-filter-form'));\r\n\r\n\r\nconst CoordinateFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with x in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"xfrom\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"xto\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <h3>Select tickets with y in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"yfrom\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"yto\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'coordinate-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(CoordinateFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport CoordinateFilterForm from \"../filterForms/CoordinateFilterForm\";\r\nimport {COORDINATE} from \"../../constants/filterConstants\";\r\n\r\n\r\nfunction CoordinateFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-coordinate\");\r\n        let filter = {};\r\n        filter.name = COORDINATE;\r\n        filter.xfrom = formData.xfrom;\r\n        filter.xto = formData.xto;\r\n        filter.yfrom = formData.yfrom;\r\n        filter.yto = formData.yto;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <CoordinateFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CoordinateFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\nimport moment from 'moment';\r\n\r\nconst dateField = ({input, label, type, onKeyDown, meta: {touched, error, warning}}) => (\r\n    <div className=\"date-box\">\r\n        <input {...input} placeholder={label} type={type} onKeyDown={onKeyDown}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n        {touched && ((error && <span className=\"error\">{error}</span>) || (warning &&\r\n            <span className=\"error\">{warning}</span>))}\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst validDate = value => {\r\n    if (moment(value, 'DD/MM/YYYY', true).isValid())\r\n        return undefined;\r\n    else\r\n        return \"Date is incorrect\";\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('id-filter-form'));\r\n\r\nconst onKeyDown = (ev) => {\r\n    var keycode;\r\n    if (window.event)\r\n        keycode = window.event.keyCode;\r\n    else if (ev)\r\n        keycode = ev.which;\r\n    let ipLength = ev.target.value.length;\r\n    if (keycode !== 8) {\r\n        if (ipLength === 2 || ipLength === 5) {\r\n            ev.target.value += '/';\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst IdFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with date in range</h3>\r\n            <div className=\"date-range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={dateField} label=\"DD/MM/YYYY\"\r\n                       onKeyDown={onKeyDown}\r\n                       validate={[required, validDate]}\r\n                />\r\n                <div id=\"date-dash\"> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={dateField} label=\"DD/MM/YYYY\"\r\n                       onKeyDown={onKeyDown}\r\n                       validate={[required, validDate]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default reduxForm({\r\n    form: 'id-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(IdFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DATE} from \"../../constants/filterConstants\";\r\nimport DateFilterForm from \"../filterForms/DateFilterForm\";\r\n\r\n\r\nfunction DateFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-date\");\r\n        let filter = {};\r\n        filter.name = DATE;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <DateFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('discount-filter-form'));\r\n\r\n\r\nconst DiscountFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with discount in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'discount-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(DiscountFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport DiscountFilterForm from \"../filterForms/DiscountFilterForm\";\r\nimport {DISCOUNT} from \"../../constants/filterConstants\";\r\n\r\n\r\nfunction DiscountFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-discount\");\r\n        let filter = {};\r\n        filter.name = DISCOUNT;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <DiscountFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DiscountFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('price-filter-form'));\r\n\r\n\r\nconst PriceFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with price in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'price-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(PriceFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {PRICE} from \"../../constants/filterConstants\";\r\nimport PriceFilterForm from \"../filterForms/PriceFilterForm\";\r\n\r\n\r\nfunction PriceFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-price\");\r\n        let filter = {};\r\n        filter.name = PRICE;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <PriceFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PriceFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('type-filter-form'));\r\n\r\nconst validateRadioGroupIsNotEmpty = values => {\r\n    let errors = {};\r\n    if (!values.compare) {\r\n        errors.compare = 'Required';\r\n    }\r\n    return errors;\r\n};\r\n\r\nconst TypeFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with type</h3>\r\n            <div className=\"radio-group\">\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"VIP\"/>Vip</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"USUAL\"/>Usual</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"BUDGETARY\"/>Budgetary</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"CHEAP\"/>Cheap</label>\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'type-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n    validate: validateRadioGroupIsNotEmpty\r\n})(TypeFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {TYPE} from \"../../constants/filterConstants\";\r\nimport TypeFilterForm from \"../filterForms/TypeFilterForm\";\r\n\r\n\r\nfunction TypeFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-type\");\r\n        let filter = {};\r\n        filter.name = TYPE;\r\n        filter.like = formData.compare;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <TypeFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypeFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst textField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"text-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('person-filter-form'));\r\n\r\n\r\nconst PersonFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with person id in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'person-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(PersonFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport PersonFilterForm from \"../filterForms/PersonFilterForm\";\r\nimport {PERSON} from \"../../constants/filterConstants\";\r\n\r\n\r\nfunction PersonFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-person\");\r\n        let filter = {};\r\n        filter.name = PERSON;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <PersonFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonFilterPage;\r\n","import React from \"react\";\r\nimport \"../../css/modal.css\";\r\n\r\nconst Modal = ({active, setActive, children}) => {\r\n    return (\r\n        <div className={active ? \"modal active\" : \"modal\"}\r\n             onClick={() => setActive(false)}>\r\n            <div className={active ? \"modal-content active\" : \"modal-content\"}\r\n                 onClick={e => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Modal;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {getSingleCoordinates} from \"../../actions/coordinatesActions\";\r\n\r\nconst EditCoordinatesForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const coordinates = useSelector(state => state.coordinates.editedCoordinates);\r\n\r\n    useEffect(() => {\r\n        //dispatch(getSingleMovie(id));\r\n        dispatch(getSingleCoordinates(id));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            id: coordinates.id,\r\n            x: coordinates.x,\r\n            y: coordinates.y\r\n        });\r\n    }, [coordinates])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Coordinates</h3>\r\n\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-coordinates-form',\r\n    keepDirtyOnReinitialize: true\r\n})(EditCoordinatesForm)","import '../../css/table-layout.css';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateCoordinates} from \"../../actions/coordinatesActions\";\r\nimport EditCoordinatesForm from \"../editForms/EditCoordinatesForm\";\r\n\r\n\r\nfunction EditCoordinatesPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const coordinatesId = useSelector(state => state.coordinates.editedCoordinates.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updateCoordinates(formData, coordinatesId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Coordinates (ID: {id})</h2>\r\n            <hr/>\r\n            <EditCoordinatesForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditCoordinatesPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\n\r\nconst CreateCoordinatesForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Coordinates</h3>\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                    /*  validate={[required]}*/\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-coordinates-form',\r\n    keepDirtyOnReinitialize: true\r\n})(CreateCoordinatesForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createCoordinates} from \"../../actions/coordinatesActions\";\r\nimport CreateCoordinatesForm from \"../createForms/CreateCoordinatesForm\";\r\n\r\n\r\nfunction CreateCoordinatesPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const coordId = useSelector(state => state.coordinates.editedCoordinates.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createCoordinates(formData, coordId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Create Coordinates</h2>\r\n            <hr/>\r\n            <CreateCoordinatesForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateCoordinatesPage;\r\n","export const SET_LOCATIONS = \"SET_LOCATIONS\"\r\nexport const SET_EDITED_LOCATION = \"SET_EDITED_LOCATION\"","import {history} from \"../components/App\";\r\nimport {BASE, LOCATION_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport {SET_EDITED_LOCATION, SET_LOCATIONS} from \"../constants/locationActionsConsts\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nexport function getSingleLocation(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                const loc = result.locationDTOList.locations.location;\r\n                dispatch({\r\n                    type: SET_EDITED_LOCATION,\r\n                    payload: loc\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getLocations() {\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(\"RESPONSE = \" + response);\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const locations = result.locationDTOList.locations.location;\r\n                dispatch({\r\n                    type: SET_LOCATIONS,\r\n                    payload: locations\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n\r\nfunction transferFormDataToLocationDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.x = form.x;\r\n    result.y = form.y;\r\n    result.name = form.name;\r\n    return result;\r\n}\r\n\r\nexport function updateLocation(location, id) {\r\n    console.log(location);\r\n    let xml = convert.js2xml(transferFormDataToLocationDTO(location), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<locationDTOList><locations><location>\" + xml + \"</location></locations></locationDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else return response.text();\r\n            })\r\n            .then(response => {\r\n                history.goBack();\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function createLocation(coordinates, id) {\r\n    let xml = convert.js2xml(coordinates, options1);\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<locationDTOList><locations><location>\" + xml + \"</location></locations></locationDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else return response.text();\r\n            })\r\n            .then(response => {\r\n                history.push(\"\");\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {getSingleLocation} from \"../../actions/locationsActions\";\r\n\r\nconst LocationEditForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const location = useSelector(state => state.location.editedLocation);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleLocation(id));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            id: location.id,\r\n            x: location.x,\r\n            y: location.y,\r\n            name: location.name\r\n        });\r\n    }, [location])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Location</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name of location\"\r\n                />\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-location-form',\r\n    keepDirtyOnReinitialize: true\r\n})(LocationEditForm)","import '../../css/table-layout.css';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateLocation} from \"../../actions/locationsActions\";\r\nimport LocationEditForm from \"../editForms/LocationEditForm\";\r\n\r\n\r\nfunction EditCoordinatesPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const locationId = useSelector(state => state.location.editedLocation.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updateLocation(formData, locationId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Location (ID: {id})</h2>\r\n            <hr/>\r\n            <LocationEditForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditCoordinatesPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\n\r\nconst LocationCreateForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Location</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name of location\"\r\n                />\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-location-form',\r\n})(LocationCreateForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createLocation} from \"../../actions/locationsActions\";\r\nimport LocationCreateForm from \"../createForms/CreateLocationForm\";\r\n\r\n\r\nfunction CreateLocationPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const locationId = useSelector(state => state.location.editedLocation.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createLocation(formData, locationId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Create Location</h2>\r\n            <hr/>\r\n            <LocationCreateForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateLocationPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {colors} from \"../../constants/enumConstants\";\r\nimport {getSinglePerson} from \"../../actions/personsActions\";\r\nimport {getLocations} from \"../../actions/locationsActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst EditPersonForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const person = useSelector(state => state.person.editedPerson);\r\n    const locationList = useSelector(state => state.location.locationsList)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getSinglePerson(id));\r\n        dispatch(getLocations());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            id: person.id,\r\n            height: person.height,\r\n            eyeColor: person.eyeColor,\r\n            locations: person.location.id\r\n        });\r\n    }, [person, locationList])\r\n\r\n    function handleEditLocationSubmit(evt) {\r\n        evt.preventDefault();\r\n        let element = document.getElementById(\"locations\");\r\n        history.push(\"/location/edit/\" + element.value);\r\n    }\r\n\r\n    function handleCreateLocationSubmit(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/location/new\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Screenwriter</h3>\r\n                <div className=\"label\">Location name</div>\r\n\r\n                <div className={\"buttons-div\"}>\r\n                    <Field name=\"locations\" id=\"locations\"\r\n                           component=\"select\" label=\"Coordinates\">\r\n                        {locationList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                    </Field>\r\n                    <button id={\"location-form-but\"} onClick={handleEditLocationSubmit}>Edit</button>\r\n                    <button id={\"location-form-but\"} onClick={handleCreateLocationSubmit}>Create</button>\r\n                </div>\r\n                <Field name=\"height\" type=\"number\"\r\n                       component={renderedInputField} label=\"Height\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Eye color</div>\r\n                <Field name=\"eyeColor\"\r\n                       component=\"select\" label=\"Eye color\">\r\n                    {colors.map(o => <option key={o} value={o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-person-form',\r\n    keepDirtyOnReinitialize: true\r\n})(EditPersonForm)","import '../../css/table-layout.css';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updatePerson} from \"../../actions/personsActions\";\r\nimport EditPersonForm from \"../editForms/EditPersonForm\";\r\n\r\n\r\nfunction EditPersonPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const ticketId = useSelector(state => state.tickets.editedTicket.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updatePerson(formData, ticketId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Person (ID: {id})</h2>\r\n            <hr/>\r\n            <EditPersonForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPersonPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {colors} from \"../../constants/enumConstants\";\r\nimport {getLocations} from \"../../actions/locationsActions\";\r\n\r\nconst CreatePersonForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const locationList = useSelector(state => state.location.locationsList)\r\n\r\n    useEffect(() => {\r\n        dispatch(getLocations());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            locations: locationList[0].id,\r\n            eyeColor: colors[0]\r\n        });\r\n    }, [locationList])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Person</h3>\r\n                <div className=\"label\">Location name</div>\r\n                <Field name=\"locations\" id=\"locations\"\r\n                       component=\"select\" label=\"Coordinates\">\r\n                    {locationList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                </Field>\r\n                <Field name=\"height\" type=\"number\"\r\n                       component={renderedInputField} label=\"Height (kilo)\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Eye color</div>\r\n                <Field name=\"eyeColor\"\r\n                       component=\"select\" label=\"Eye color\">\r\n                    {colors.map(o => <option key={o} value={o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-person-form',\r\n})(CreatePersonForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CreatePersonForm from \"../createForms/CreatePersonForm\";\r\nimport {createPerson} from \"../../actions/personsActions\";\r\n\r\n\r\nfunction CreatePersonPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const personId = useSelector(state => state.person.editedPerson.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createPerson(formData, personId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Create Person</h2>\r\n            <hr/>\r\n            <CreatePersonForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePersonPage;\r\n","// export const SET_GENRE_COUNT = \"SET_GENRE_COUNT\"\r\n// export const SET_GENRE = \"SET_GENRE\"\r\n// export const SET_DISCOUNT = \"SET_DISCOUNT\"\r\n// export const SET_DISCOUNT_COUNT = \"SET_DISCOUNT_COUNT\"\r\n// export const SET_PERSON = \"SET_PERSON\"\r\n// export const SET_PERSON_LIST = \"SET_PERSON_LIST\"\r\nexport const SET_TYPE_LIST = \"SET_TYPE_LIST\";\r\nexport const SET_TICKET_COUNT = \"SET_TICKET_COUNT\";\r\nexport const SET_TICKET_LIST = \"SET_TICKET_LIST\";\r\nexport const SET_PERSON_LIST = \"SET_PERSON_LIST\";\r\nexport const SET_DISCOUNT = \"SET_DISCOUNT\";","import '../../css/table-layout.css';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_TYPE_LIST} from \"../../constants/additionalActionsConsts\";\r\nimport {getTypeList} from \"../../actions/additionalTasksActions\";\r\n\r\nfunction TypeTaskPage() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const typeList = useSelector(state => state.additional.typeList);\r\n\r\n    useEffect(() => {\r\n        // return history.listen(location => {\r\n        //     if (history.action === 'POP') {\r\n        //         getTypeList();\r\n        //     } else {\r\n        //         getTypeList();\r\n        //     }\r\n\r\n        // })\r\n        dispatch(getTypeList());\r\n    }, [])\r\n\r\n    function redirectOnMain() {\r\n        history.push(\"\");\r\n        dispatch({\r\n            type: SET_TYPE_LIST,\r\n            payload: []\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-layout\">\r\n            <h1>Ticket types task</h1>\r\n            <div className={\"add-task-container\"}>\r\n                <div>What unique ticket types are presented in table</div>\r\n            </div>\r\n            {typeList && typeList.length > 0 &&\r\n            typeList.map(t => \r\n                <li>{t.type}</li>\r\n            )\r\n            }\r\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO MOVIES</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypeTaskPage;\r\n","import {ADDITIONAL_SERVLET, BASE} from \"../constants/backendConstants\";\r\nimport {convert, options} from \"../utils/xmlUtils\";\r\nimport {SET_TYPE_LIST, SET_TICKET_COUNT, SET_TICKET_LIST} from \"../constants/additionalActionsConsts\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\nexport function getTypeList() {\r\n    return (dispatch) => {\r\n        const url = BASE + ADDITIONAL_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                dispatch({\r\n                    type: SET_TYPE_LIST,\r\n                    payload: result.ticketTypeDTOList.ticketTypes.ticketType\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getTicketList(discount) {\r\n    console.log(\"DISCOUNT = \" + discount);\r\n    return (dispatch) => {\r\n        const url = BASE + ADDITIONAL_SERVLET + \"?discount=\" + discount;\r\n        console.log(url);\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                console.log(result);\r\n                dispatch({\r\n                    type: SET_TICKET_LIST,\r\n                    payload: result.ticketDTOList.ticketList.ticketList\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getTicketCount(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + ADDITIONAL_SERVLET + \"?person=\" + id;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                const result = convert.xml2js(response, options);\r\n                dispatch({\r\n                    type: SET_TICKET_COUNT,\r\n                    payload: result.countDTO.count\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}","import '../css/table-header.css';\r\nimport '../css/app.css';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nfunction PersonTableHeader() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"table-header base\" id=\"table-header\">\r\n\r\n            <div className=\"id-div\">\r\n                <span>Id</span>\r\n            </div>\r\n            <div>\r\n                <span>Name</span>\r\n            </div>\r\n            <div>\r\n                <span>Discount</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonTableHeader;\r\n","import \"../css/table-row.css\"\r\nimport '../css/app.css';\r\n\r\nfunction PersonTableRow(props) {\r\n    const person = props.person;\r\n    const personId = person.id;\r\n\r\n    return (\r\n        <div className=\"table-row base\">\r\n            <div className=\"id-div\">{personId}</div>\r\n            <div>{person.name}</div>\r\n            <div>{person.discount}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonTableRow;\r\n","import PersonTableRow from \"./PersonTableRow\";\r\n\r\nfunction PersonList(props) {\r\n    const personList = props.personList;\r\n    // console.log(\"SCREENWRITER LIST = \" + screenwriterList)\r\n    let listItems;\r\n    if (personList === undefined) {\r\n        return (\r\n            <div className=\"table-row base id-div\">\r\n                <div className=\"id-div\">No data.</div>\r\n            </div>\r\n        );\r\n    }\r\n    if (!Array.isArray(personList)) {\r\n        console.log(\"NOT ARRAY\")\r\n        listItems = <PersonTableRow person={personList} key={personList.id}/>\r\n    } else {\r\n        listItems = personList.map((person) =>\r\n            <PersonTableRow person={person} key={person.id}/>\r\n        );\r\n    }\r\n    return (\r\n        <div>{listItems}</div>\r\n    );\r\n}\r\n\r\nexport default PersonList;","import '../css/movie-table.css';\r\nimport PersonTableHeader from \"./PersonTableHeader\";\r\nimport PersonList from \"./PersonList\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction PersonTable() {\r\n    const personList = useSelector(state => state.additional.ticketList);\r\n\r\n    return (\r\n        <div className=\"movie-table\">\r\n            <PersonTableHeader/>\r\n            <PersonList personList={personList}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonTable;","import '../../css/table-layout.css';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_DISCOUNT, SET_TICKET_LIST} from \"../../constants/additionalActionsConsts\";\r\nimport {getLengthCount, getTicketList} from \"../../actions/additionalTasksActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport PersonTable from '../../personTableComponents/PersonTable';\r\n\r\nfunction DurationTaskPage() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    //const durationCount = useSelector(state => state.additional.lengthCount);\r\n    const ticketList = useSelector(state => state.additional.ticketList);\r\n    const [localDiscount, setLocalDiscount] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        return history.listen(location => {\r\n            if (history.action === 'POP') {\r\n                dispatch({\r\n                    type: SET_TICKET_LIST,\r\n                    payload: []\r\n                });\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }, [])\r\n\r\n    function handleOnChangeDiscount(event) {\r\n        let input = event.target.value;\r\n        setLocalDiscount(input);\r\n    }\r\n\r\n    function handleOnFocusDiscount(event) {\r\n        setLocalDiscount(\"\");\r\n        dispatch({\r\n            type: SET_TICKET_LIST,\r\n            payload: []\r\n        });\r\n    }\r\n\r\n    function handleOnBlurDiscount(event) {\r\n        let input = event.target.value;\r\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) >= 0) {\r\n            dispatch(getTicketList(input));\r\n        } else {\r\n            setLocalDiscount(\"\")\r\n        }\r\n    }\r\n\r\n    function redirectOnMain() {\r\n        dispatch({\r\n            type: SET_TICKET_LIST,\r\n            payload: []\r\n        });\r\n        history.push(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-layout\">\r\n            <h1>Discount task</h1>\r\n            <div className={\"add-task-container\"}>\r\n                <div>Get tickets exist with discount less than</div>\r\n                <input type={\"number\"} className={\"add-input\"} value={localDiscount}\r\n                       onChange={handleOnChangeDiscount}\r\n                       onFocus={handleOnFocusDiscount}\r\n                       onBlur={handleOnBlurDiscount}/>\r\n            </div>\r\n            {(!Array.isArray(ticketList) || ticketList.length > 0) &&\r\n            <PersonTable/>\r\n            }\r\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO TICKETS</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DurationTaskPage;\r\n","import '../../css/table-layout.css';\r\nimport React, {useEffect} from \"react\";\r\nimport {getPerson} from \"../../actions/personsActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_TICKET_COUNT, SET_PERSON_LIST} from \"../../constants/additionalActionsConsts\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getTicketCount} from \"../../actions/additionalTasksActions\";\r\nimport PersonTable from \"../../personTableComponents/PersonTable\";\r\n\r\nfunction ScreenwriterTaskPage() {\r\n    const dispatch = useDispatch();\r\n    const personList = useSelector(state => state.person.personsList);\r\n    //const personList_ = useSelector(state => state.additional.personList);\r\n    const ticketCount = useSelector(state => state.additional.ticketCount);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPerson());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return history.listen(location => {\r\n            if (history.action === 'POP') {\r\n                dispatch({\r\n                    type: SET_PERSON_LIST,\r\n                    payload: []\r\n                });\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }, [])\r\n\r\n    function redirectOnMain() {\r\n        history.push(\"\");\r\n        dispatch({\r\n            type: SET_TICKET_COUNT,\r\n            payload: \"\"\r\n        });\r\n    }\r\n\r\n    function handleOnChangePerson(event) {\r\n        let input = event.target.value;\r\n        if (input !== \"\")\r\n            dispatch(getTicketCount(input));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"task-layout\">\r\n            <h1>Person task</h1>\r\n            <div className={\"add-task-container\"}>\r\n                <div>Count tickets with PERSON's id less than</div>\r\n                <select className={\"add-select\"}\r\n                        onChange={handleOnChangePerson}\r\n                        onBlur={handleOnChangePerson}>\r\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.id}</option>)}\r\n                </select>\r\n            </div>\r\n            {ticketCount !== \"\" &&\r\n            <div className={\"answer\"}> Answer: {ticketCount}</div>\r\n            }\r\n\r\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO TICKETS</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScreenwriterTaskPage;\r\n","import '../css/app.css';\r\nimport TablePage from \"./movieTableComponents/TablePage\";\r\nimport Notifications from 'react-notification-system-redux';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport TicketEditPage from \"./editPages/TicketEditPage\";\r\nimport CreateTicketPage from \"./createPages/CreateTicketPage\";\r\nimport createBrowserHistory from 'history/createBrowserHistory'\r\nimport {COORDINATE, DATE, PRICE, TYPE, ID, NAME, DISCOUNT, PERSON} from \"../constants/filterConstants\";\r\nimport IdFilterPage from \"./filterPages/IdFilterPage\";\r\nimport NameFilterPage from \"./filterPages/NameFilterPage\";\r\nimport CoordinateFilterPage from \"./filterPages/CoordinateFilterPage\";\r\nimport DateFilterPage from \"./filterPages/DateFilterPage\";\r\nimport DiscountFilterPage from \"./filterPages/DiscountFilterPage\";\r\nimport PriceFilterPage from \"./filterPages/PriceFilterPage\";\r\nimport TypeFilterPage from \"./filterPages/TypeFilterPage\";\r\n//import RatingFilterPage from \"./filterPages/RatingFilterPage\";\r\nimport PersonFilterPage from \"./filterPages/PersonFilterPage\";\r\nimport Modal from \"./modal/Modal\";\r\nimport EditCoordinatesPage from \"./editPages/EditCoordinatesPage\";\r\nimport CreateCoordinatesPage from \"./createPages/CreateCoordinatesPage\";\r\nimport LocationEditPage from \"./editPages/LocationEditPage\";\r\nimport CreateLocationPage from \"./createPages/CreateLocationPage\";\r\nimport EditPersonPage from \"./editPages/EditPersonPage\";\r\nimport CreatePersonPage from \"./createPages/CreatePersonPage\";\r\nimport TypeTaskPage from \"./additionalTasks/TypesTaskPage\";\r\nimport DiscountTaskPage from \"./additionalTasks/DiscountTaskPage\";\r\nimport PersonTaskPage from \"./additionalTasks/PersonTaskPage\";\r\n\r\nexport const history = createBrowserHistory()\r\n\r\n/*class DebugRouter extends Router {\r\n    constructor(props){\r\n        super(props);\r\n        console.log('initial history is: ', JSON.stringify(this.history, null,2))\r\n        this.history.listen((location, action)=>{\r\n            console.log(\r\n                `The current URL is ${location.pathname}${location.search}${location.hash}`\r\n            )\r\n            console.log(`The last navigation action was ${action}`, JSON.stringify(this.history, null,2));\r\n        });\r\n    }\r\n}*/\r\n\r\nfunction App() {\r\n    const notifications = useSelector(state => state.notifications);\r\n    const modalActive = useSelector(state => state.page.modalActive);\r\n    const dispatch = useDispatch();\r\n    const currentCriterion = useSelector(state => state.page.curCriterion);\r\n\r\n    function setActive(value) {\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Modal active={modalActive} setActive={setActive} id=\"modal\">\r\n                {currentCriterion === ID && <IdFilterPage/>}\r\n                {currentCriterion === NAME && <NameFilterPage/>}\r\n                {currentCriterion === COORDINATE && <CoordinateFilterPage/>}\r\n                {currentCriterion === DATE && <DateFilterPage/>}\r\n                {currentCriterion === DISCOUNT && <DiscountFilterPage/>}\r\n                {currentCriterion === PRICE && <PriceFilterPage/>}\r\n                {currentCriterion === TYPE && <TypeFilterPage/>}\r\n                {currentCriterion === PERSON && <PersonFilterPage/>}\r\n            </Modal>\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path=\"/edit/:id\">\r\n                        <TicketEditPage/>\r\n                    </Route>\r\n                    <Route path=\"/coordinates/edit/:id\">\r\n                        <EditCoordinatesPage/>\r\n                    </Route>\r\n                    <Route path=\"/location/edit/:id\">\r\n                        <LocationEditPage/>\r\n                    </Route>\r\n                    <Route path=\"/person/edit/:id\">\r\n                        <EditPersonPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/coordinates/new\">\r\n                        <CreateCoordinatesPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/location/new\">\r\n                        <CreateLocationPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/person/new\">\r\n                        <CreatePersonPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/additional/type\">\r\n                        <TypeTaskPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/additional/discount\">\r\n                        <DiscountTaskPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/additional/person\">\r\n                        <PersonTaskPage/>\r\n                    </Route>\r\n                    <Route path=\"/new\">\r\n                        <CreateTicketPage/>\r\n                    </Route>\r\n                    <Route exact path=\"\">\r\n                        <TablePage/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n            <Notifications notifications={notifications}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {SET_EDITED_TICKET, SET_TICKETS} from \"../constants/ticketActionsConsts\";\r\n\r\nconst initialState = {\r\n    ticketList: [],\r\n    editedTicket: {\r\n        coordinates: {id: \"\", x: \"\", y: \"\"},\r\n        person: {\r\n            id: \"\", eyeColor: \"\", height: \"\",\r\n            location: {id: \"\", x: \"\", name: \"\", y: \"\"}\r\n        }\r\n    }\r\n};\r\n\r\nexport function ticketReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_TICKETS:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                ticketList: action.payload\r\n            };\r\n        case SET_EDITED_TICKET:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                editedTicket: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {\r\n    DELETE_TICKET,\r\n    REMOVE_FILTER,\r\n    REMOVE_SORT,\r\n    SET_CUR_CRITERION,\r\n    SET_CUR_PAGE,\r\n    SET_FILTER,\r\n    SET_ITEM_COUNT,\r\n    SET_PER_PAGE,\r\n    SET_SORT,\r\n    SHOW_MODAL\r\n} from \"../constants/pageActionsConsts\";\r\n\r\nconst initialState = {\r\n    perPage: 10,\r\n    currentPage: 1,\r\n    itemCount: \"\",\r\n    deleteItem: 0,\r\n    sortBy: [],\r\n    modalActive: false,\r\n    filters: [],\r\n    curCriterion: \"\",\r\n};\r\n\r\n\r\nexport function pageReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PER_PAGE:\r\n            return {\r\n                ...state,\r\n                perPage: action.payload\r\n            };\r\n        case SET_CUR_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload\r\n            };\r\n        case SET_CUR_CRITERION:\r\n            return {\r\n                ...state,\r\n                curCriterion: action.payload\r\n            };\r\n        case SET_ITEM_COUNT:\r\n            return {\r\n                ...state,\r\n                itemCount: action.payload\r\n            };\r\n        case DELETE_TICKET:\r\n            return {\r\n                ...state,\r\n                deleteItem: state.deleteItem + 1\r\n            };\r\n        case SET_SORT:\r\n            return {\r\n                ...state,\r\n                sortBy: [...state.sortBy, action.payload]\r\n            };\r\n        case REMOVE_SORT:\r\n            return {\r\n                ...state,\r\n                sortBy: state.sortBy.filter(item => item !== action.payload)\r\n            };\r\n        case SHOW_MODAL:\r\n            return {\r\n                ...state,\r\n                modalActive: action.payload\r\n            };\r\n        case SET_FILTER:\r\n            return {\r\n                ...state,\r\n                filters: [...state.filters, action.payload]\r\n            };\r\n        case REMOVE_FILTER:\r\n            return {\r\n                ...state,\r\n                filters: state.filters.filter(item => item.name !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_COORDINATES, SET_EDITED_COORDINATES} from \"../constants/coordinatesActionsConsts\";\r\n\r\nconst initialState = {\r\n    coordinatesList: [{id: \"\", x: \"\", y: \"\"}],\r\n    editedCoordinates: {id: \"\", x: \"\", y: \"\"}\r\n};\r\n\r\nexport function coordinatesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_COORDINATES:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                coordinatesList: action.payload\r\n            };\r\n        case SET_EDITED_COORDINATES:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                editedCoordinates: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_EDITED_LOCATION, SET_LOCATIONS} from \"../constants/locationActionsConsts\";\r\n\r\nconst initialState = {\r\n    locationsList: [{id: \"\", x: \"\", y: \"\", name: \"\"}],\r\n    editedLocation: {id: \"\", x: \"\", y: \"\", name: \"\"}\r\n};\r\n\r\nexport function locationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LOCATIONS:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                locationsList: action.payload\r\n            };\r\n        case SET_EDITED_LOCATION:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                editedLocation: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_EDITED_PERSON, SET_PERSONS} from \"../constants/personActionsConsts\";\r\n\r\nconst initialState = {\r\n    personsList: [{id: \"\", height: \"\", eyeColor: \"\", location: {}}],\r\n    editedPerson: {id: \"\", height: \"\", eyeColor: \"\", location: {}}\r\n};\r\n\r\nexport function personReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PERSONS:\r\n            return {\r\n                ...state,\r\n                personsList: action.payload\r\n            };\r\n        case SET_EDITED_PERSON:\r\n            return {\r\n                ...state,\r\n                editedPerson: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {\r\n    SET_TICKET_COUNT,\r\n    SET_TICKET_LIST,\r\n    SET_TYPE_LIST,\r\n    SET_PERSON_LIST\r\n} from \"../constants/additionalActionsConsts\";\r\n\r\nconst initialState = {\r\n    // genre: \"\",\r\n    // genreCount: \"\",\r\n    // length: \"\",\r\n    ticketCount: \"\",\r\n    // screenwriter: {},\r\n    typeList: [],\r\n    ticketList: [],\r\n    personList: []\r\n};\r\n\r\nexport function additionalTasksReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_TYPE_LIST:\r\n            return {\r\n                ...state,\r\n                typeList: action.payload\r\n            };\r\n        case SET_TICKET_COUNT:\r\n            return {\r\n                ...state,\r\n                ticketCount: action.payload\r\n            };\r\n        case SET_TICKET_LIST:\r\n            return {\r\n                ...state,\r\n                ticketList: action.payload\r\n            };\r\n        case SET_PERSON_LIST:\r\n            return {\r\n                ...state,\r\n                personList: action.payload\r\n            };\r\n        // case SET_GENRE_COUNT:\r\n        //     return {\r\n        //         ...state,\r\n        //         genreCount: action.payload\r\n        //     };\r\n        // case SET_GENRE:\r\n        //     return {\r\n        //         ...state,\r\n        //         genre: action.payload\r\n        //     };\r\n        // case SET_SCREENWRITER_LIST:\r\n        //     return {\r\n        //         ...state,\r\n        //         screenwriterList: action.payload\r\n        //     };\r\n        // case SET_LENGTH:\r\n        //     return {\r\n        //         ...state,\r\n        //         length: action.payload\r\n        //     };\r\n        // case SET_LENGTH_COUNT:\r\n        //     return {\r\n        //         ...state,\r\n        //         lengthCount: action.payload\r\n        //     };\r\n        // case SET_SCREENWRITER:\r\n        //     return {\r\n        //         ...state,\r\n        //         screenwriter: action.payload\r\n        //     };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux'\r\nimport {ticketReducer} from './ticketReducer.js'\r\nimport {reducer as notifications} from 'react-notification-system-redux';\r\nimport {pageReducer} from \"./pageReducer\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport {coordinatesReducer} from \"./coordinatesReducer\";\r\nimport {locationReducer} from \"./locationReducer\";\r\nimport {personReducer} from \"./personReducer\";\r\nimport {additionalTasksReducer} from \"./additionalTasksReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    tickets: ticketReducer,\r\n    notifications: notifications,\r\n    page: pageReducer,\r\n    coordinates: coordinatesReducer,\r\n    location: locationReducer,\r\n    person: personReducer,\r\n    additional: additionalTasksReducer,\r\n    form: formReducer,\r\n});","import App from './components/App'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {rootReducer} from './reducer/rootReducer.js'\r\nimport {Provider} from \"react-redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport logger from \"redux-logger\";\r\nimport {applyMiddleware, createStore} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk, logger)),\r\n);\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}